%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Rafa T) ()
%%Title: (Video game retro menu.eps)
%%CreationDate: 3/26/2019 12:49 AM
%%BoundingBox: -2 0 424 426
%%HiResBoundingBox: -1.50049 0.302734 423.6973 425.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registro])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 212 212 212 212
%AI3_TileBox: -86.5615 -208.0586 508.7588 633.8613
%AI3_DocumentPreview: Header
%AI5_ArtSize: 425.1969 425.1969
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -616.5 732.5 1.0579 865 949 26 0 0 1012 83 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-1 1
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Plugin Fusiones de Adobe) (Fusiones en directo.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (S\355mbolos de Adobe) (S\355mbolos.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Calcando) (Calco \(base\).aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Destello.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\341fico de Adobe) (Herramienta Pincel caligr\341fico.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\363n de Adobe) (Herramienta Pincel de dispersi\363n.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\363n de Adobe) (Herramienta Pincel de dispersi\363n.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (Ilustraci\363nEnTrazado.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (Ilustraci\363nEnTrazado.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (Ilustraci\363nEnTrazado.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (Ilustraci\363nEnTrazado.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envolvente y Deformar.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Forma compuesta de Adobe) (Buscatrazos \(base\).aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Pintura interactiva.aip)
%AI5_End_NonPrinting--
1 Bn
%AI5_BeginGradient: (Unnamed gradient)
(Unnamed gradient) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F2021222324252628292A2B2C2D2D
2E2F303233343637383A3B3C3D3E3F41424344454647494A4B4C4D4E4F5051525354565758595A5C
5D5E6061626365666768696A6B6C6D6E6F707172747576777879797A7B7C7D7E7F80818181828384
848586878788898A8B8B8C8D8E8F9090919292939494959696979899999A9B9B9C9D9D9E9E9FA0A0
A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B0B1B1B2B2B1B1B2B2B3B3
B4B4B5B5B7B7B8B8B9B9B9BABABABBBBBCBCBDBDBEBFBFC0C0C1C1C2C3C3C4C4C4
>
<
0000010203040505060708090A0B0C0D0E0F10111213131415161718191A1A1B1C1D1E1F20202123
232425262728292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3E3F404243444546464749
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6060616263646566676768696A6B6C6D6E6E
6F7071717273747475767778797A7A7B7C7D7D7E7F7F80818182838484858686878888898A8A8B8C
8D8D8E8F8F9090919292939494959596979798999A9A9B9C9C9D9E9E9E9FA0A0A1A1A2A3A3A4A5A6
A6A7A8A8AAABABACADADAEAFAFB0B1B2B2B3B4B5B6B7B7B8B9BABBBCBDBEBFBFC0
>
<
0000010203040505060708090A0A0B0C0D0E0F10101112131415151617161718191A1B1C1C1D1E1F
20202122232425262728292A2B2B2C2D2E2E2F3031313233343536373838393A3B3C3D3D3E3F4041
424445464647484748494A4B4C4D4E4F5050515253545556565758595A5A5B5C5D5D5E5F5F606162
62636464656666676768696A6B6C6C6D6E6F6F707071727273727373747475767677787879797A7A
7B7C7C7D7D7E7E7F808081818282838384858586868787888889898A8A8B8B8C8C8D8E8E8F8F9090
9191929290919192929393949495959596969797989899999A9B9B9C9D9D9E9E9F
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001010101010202020303040404050506060708080909
0A0B0C0C0D0E0F1011121314161718191A1B1C1E1F20212224242527282A2B2C2E2F313234353739
3A3C3D3F41434446484A4B4D4F51535557595B5D5F61636567696A6C6D6F717375787A7C7E808385
87898C8E8F919396989B9D9FA2A4A6A9ABADB0B2B5B7B9BCBEC0C3C5C8CACCCECF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8D8C8B8A
898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665646362
61605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140403F3E3D3C3B
3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
3A39383737363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.858823 0.85098 0.788235 1 ([Registro]) 0 Xs
([Registro])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 43 42 41 0 100 Lb
(Capa 1) Ln
0 A
0 O
0.858823 0.85098 0.788235 1 0 0 0 Xa
0 J 0 j 1 w 4 M []0 d1 XR
-1.50049 0.302734 m
423.6973 0.302734 L
423.6973 425.5 L
-1.50049 425.5 L
-1.50049 0.302734 L
f
u
*u
0 XR
0 g
119.54 219.6597 m
120.2227 219.6597 120.9253 219.6597 121.6279 219.6597 c
122.3301 219.6597 123.0532 219.6597 123.7759 219.6597 C
123.7759 218.9468 123.7759 218.2441 123.7759 217.542 c
123.7759 216.8291 123.7759 216.1265 123.7759 215.4238 C
123.0532 215.4238 122.3301 215.4238 121.6279 215.4238 c
120.9253 215.4238 120.2227 215.4238 119.54 215.4238 C
119.54 216.1265 119.54 216.8291 119.54 217.542 c
119.54 218.2441 119.54 218.9468 119.54 219.6597 C
119.54 219.6597 L
f
0 g
138.8311 210.1045 m
139.5342 210.1045 140.2466 210.1045 140.9492 210.1045 c
141.6519 210.1045 142.3643 210.1045 143.0972 210.1045 C
143.0972 209.3916 143.0972 208.6787 143.0972 207.9658 c
143.0972 207.2539 143.0972 206.541 143.0972 205.8389 C
142.3643 205.8389 141.6519 205.8389 140.9492 205.8389 c
140.2466 205.8389 139.5342 205.8389 138.8311 205.8389 C
138.8311 206.541 138.8311 207.2539 138.8311 207.9658 c
138.8311 208.6787 138.8311 209.3916 138.8311 210.1045 C
138.8311 210.1045 L
f
0 g
138.8311 214.8618 m
139.5342 214.8618 140.2466 214.8618 140.9492 214.8618 c
141.6519 214.8618 142.3643 214.8618 143.0972 214.8618 C
143.0972 214.1592 143.0972 213.4565 143.0972 212.7437 c
143.0972 212.0415 143.0972 211.3389 143.0972 210.626 C
142.3643 210.626 141.6519 210.626 140.9492 210.626 c
140.2466 210.626 139.5342 210.626 138.8311 210.626 C
138.8311 211.3389 138.8311 212.0415 138.8311 212.7437 c
138.8311 213.4565 138.8311 214.1592 138.8311 214.8618 C
138.8311 214.8618 L
f
0 g
138.8311 219.6597 m
139.5342 219.6597 140.2466 219.6597 140.9492 219.6597 c
141.6519 219.6597 142.3643 219.6597 143.0972 219.6597 C
143.0972 218.9468 143.0972 218.2441 143.0972 217.542 c
143.0972 216.8291 143.0972 216.1265 143.0972 215.4238 C
142.3643 215.4238 141.6519 215.4238 140.9492 215.4238 c
140.2466 215.4238 139.5342 215.4238 138.8311 215.4238 C
138.8311 216.1265 138.8311 216.8291 138.8311 217.542 c
138.8311 218.2441 138.8311 218.9468 138.8311 219.6597 C
138.8311 219.6597 L
f
0 g
134.0034 205.3066 m
134.7158 205.3066 135.4189 205.3066 136.1216 205.3066 c
136.834 205.3066 137.5366 205.3066 138.2393 205.3066 C
138.2393 204.6035 138.2393 203.8916 138.2393 203.1885 c
138.2393 202.4863 138.2393 201.7734 138.2393 201.0703 C
137.5366 201.0703 136.834 201.0703 136.1216 201.0703 c
135.4189 201.0703 134.7158 201.0703 134.0034 201.0703 C
134.0034 201.7734 134.0034 202.4863 134.0034 203.1885 c
134.0034 203.8916 134.0034 204.6035 134.0034 205.3066 C
134.0034 205.3066 L
f
0 g
134.0034 224.4473 m
134.7158 224.4473 135.4189 224.4473 136.1216 224.4473 c
136.834 224.4473 137.5366 224.4473 138.2393 224.4473 C
138.2393 223.7446 138.2393 223.0317 138.2393 222.3193 c
138.2393 221.6064 138.2393 220.9038 138.2393 220.2114 C
137.5366 220.2114 136.834 220.2114 136.1216 220.2114 c
135.4189 220.2114 134.7158 220.2114 134.0034 220.2114 C
134.0034 220.9038 134.0034 221.6064 134.0034 222.3193 c
134.0034 223.0317 134.0034 223.7446 134.0034 224.4473 C
134.0034 224.4473 L
f
0 g
129.1855 205.3066 m
129.8882 205.3066 130.6011 205.3066 131.3037 205.3066 c
132.0059 205.3066 132.7188 205.3066 133.4214 205.3066 C
133.4214 204.6035 133.4214 203.8916 133.4214 203.1885 c
133.4214 202.4863 133.4214 201.7734 133.4214 201.0703 C
132.7188 201.0703 132.0059 201.0703 131.3037 201.0703 c
130.6011 201.0703 129.8882 201.0703 129.1855 201.0703 C
129.1855 201.7734 129.1855 202.4863 129.1855 203.1885 c
129.1855 203.8916 129.1855 204.6035 129.1855 205.3066 C
129.1855 205.3066 L
f
0 g
129.1855 224.4473 m
129.8882 224.4473 130.6011 224.4473 131.3037 224.4473 c
132.0059 224.4473 132.7188 224.4473 133.4214 224.4473 C
133.4214 223.7446 133.4214 223.0317 133.4214 222.3193 c
133.4214 221.6064 133.4214 220.9038 133.4214 220.2114 C
132.7188 220.2114 132.0059 220.2114 131.3037 220.2114 c
130.6011 220.2114 129.8882 220.2114 129.1855 220.2114 C
129.1855 220.9038 129.1855 221.6064 129.1855 222.3193 c
129.1855 223.0317 129.1855 223.7446 129.1855 224.4473 C
129.1855 224.4473 L
f
0 g
124.3379 205.3066 m
125.0405 205.3066 125.7529 205.3066 126.4658 205.3066 c
127.1782 205.3066 127.8911 205.3066 128.5933 205.3066 C
128.5933 204.6035 128.5933 203.8916 128.5933 203.1885 c
128.5933 202.4863 128.5933 201.7734 128.5933 201.0703 C
127.8911 201.0703 127.1782 201.0703 126.4658 201.0703 c
125.7529 201.0703 125.0405 201.0703 124.3379 201.0703 C
124.3379 201.7734 124.3379 202.4863 124.3379 203.1885 c
124.3379 203.8916 124.3379 204.6035 124.3379 205.3066 C
124.3379 205.3066 L
f
0 g
124.3379 224.4473 m
125.0405 224.4473 125.7529 224.4473 126.4658 224.4473 c
127.1782 224.4473 127.8911 224.4473 128.5933 224.4473 C
128.5933 223.7446 128.5933 223.0317 128.5933 222.3193 c
128.5933 221.6064 128.5933 220.9038 128.5933 220.2114 C
127.8911 220.2114 127.1782 220.2114 126.4658 220.2114 c
125.7529 220.2114 125.0405 220.2114 124.3379 220.2114 C
124.3379 220.9038 124.3379 221.6064 124.3379 222.3193 c
124.3379 223.0317 124.3379 223.7446 124.3379 224.4473 C
124.3379 224.4473 L
f
0 g
119.54 210.1045 m
120.2227 210.1045 120.9253 210.1045 121.6279 210.1045 c
122.3301 210.1045 123.0532 210.1045 123.7759 210.1045 C
123.7759 209.3916 123.7759 208.6787 123.7759 207.9658 c
123.7759 207.2539 123.7759 206.541 123.7759 205.8389 C
123.0532 205.8389 122.3301 205.8389 121.6279 205.8389 c
120.9253 205.8389 120.2227 205.8389 119.54 205.8389 C
119.54 206.541 119.54 207.2539 119.54 207.9658 c
119.54 208.6787 119.54 209.3916 119.54 210.1045 C
119.54 210.1045 L
f
119.54 214.8618 m
120.2227 214.8618 120.9253 214.8618 121.6279 214.8618 c
122.3301 214.8618 123.0532 214.8618 123.7759 214.8618 C
123.7759 214.1592 123.7759 213.4565 123.7759 212.7437 c
123.7759 212.0415 123.7759 211.3389 123.7759 210.626 C
123.0532 210.626 122.3301 210.626 121.6279 210.626 c
120.9253 210.626 120.2227 210.626 119.54 210.626 C
119.54 211.3389 119.54 212.0415 119.54 212.7437 c
119.54 213.4565 119.54 214.1592 119.54 214.8618 C
Bb
1 (Unnamed gradient) 131.3848 225.8491 -90.2906 27.8202 1 0 0 1 0 0 Bg
-0.141101 -27.8198 -27.6266 0.140121 145.1987 225.7793 Xm
-41.1459 -8112.4136 -27.6266 0.140121 186.3447 8338.1924 Bc
-0.141101 -27.8198 -27.6266 0.140121 145.1987 225.7793 Bm
-41.1459 -8112.4136 -27.6266 0.140121 145.0576 197.96 Bc
f
0 BB
*U
*u
0 g
148.1255 224.4775 m
148.8081 224.4775 149.5107 224.4775 150.2134 224.4775 c
150.9155 224.4775 151.6284 224.4775 152.3311 224.4775 C
152.3311 223.7744 152.3311 223.0723 152.3311 222.3594 c
152.3311 221.6567 152.3311 220.9546 152.3311 220.2417 C
151.6284 220.2417 150.9155 220.2417 150.2134 220.2417 c
149.5107 220.2417 148.8081 220.2417 148.1255 220.2417 C
148.1255 220.9546 148.1255 221.6567 148.1255 222.3594 c
148.1255 223.0723 148.1255 223.7744 148.1255 224.4775 C
148.1255 224.4775 L
f
0 g
167.4165 219.6895 m
168.1196 219.6895 168.832 219.6895 169.5347 219.6895 c
170.2373 219.6895 170.9497 219.6895 171.6523 219.6895 C
171.6523 218.9771 171.6523 218.2744 171.6523 217.5718 c
171.6523 216.8594 171.6523 216.1563 171.6523 215.4541 C
170.9497 215.4541 170.2373 215.4541 169.5347 215.4541 c
168.832 215.4541 168.1196 215.4541 167.4165 215.4541 C
167.4165 216.1563 167.4165 216.8594 167.4165 217.5718 c
167.4165 218.2744 167.4165 218.9771 167.4165 219.6895 C
167.4165 219.6895 L
f
0 g
162.5889 214.9219 m
163.3013 214.9219 164.0039 214.9219 164.707 214.9219 c
165.4194 214.9219 166.1221 214.9219 166.8247 214.9219 C
166.8247 214.2192 166.8247 213.5068 166.8247 212.8042 c
166.8247 212.1016 166.8247 211.3887 166.8247 210.6865 C
166.1221 210.6865 165.4194 210.6865 164.707 210.6865 c
164.0039 210.6865 163.3013 210.6865 162.5889 210.6865 C
162.5889 211.3887 162.5889 212.1016 162.5889 212.8042 c
162.5889 213.5068 162.5889 214.2192 162.5889 214.9219 C
162.5889 214.9219 L
f
0 g
162.5889 224.4775 m
163.3013 224.4775 164.0039 224.4775 164.707 224.4775 c
165.4194 224.4775 166.1221 224.4775 166.8247 224.4775 C
166.8247 223.7744 166.8247 223.0723 166.8247 222.3594 c
166.8247 221.6567 166.8247 220.9546 166.8247 220.2417 C
166.1221 220.2417 165.4194 220.2417 164.707 220.2417 c
164.0039 220.2417 163.3013 220.2417 162.5889 220.2417 C
162.5889 220.9546 162.5889 221.6567 162.5889 222.3594 c
162.5889 223.0723 162.5889 223.7744 162.5889 224.4775 C
162.5889 224.4775 L
f
0 g
157.771 214.9219 m
158.4736 214.9219 159.1865 214.9219 159.8892 214.9219 c
160.5913 214.9219 161.3042 214.9219 162.0068 214.9219 C
162.0068 214.2192 162.0068 213.5068 162.0068 212.8042 c
162.0068 212.1016 162.0068 211.3887 162.0068 210.6865 C
161.3042 210.6865 160.5913 210.6865 159.8892 210.6865 c
159.1865 210.6865 158.4736 210.6865 157.771 210.6865 C
157.771 211.3887 157.771 212.1016 157.771 212.8042 c
157.771 213.5068 157.771 214.2192 157.771 214.9219 C
157.771 214.9219 L
f
0 g
157.771 224.4775 m
158.4736 224.4775 159.1865 224.4775 159.8892 224.4775 c
160.5913 224.4775 161.3042 224.4775 162.0068 224.4775 C
162.0068 223.7744 162.0068 223.0723 162.0068 222.3594 c
162.0068 221.6567 162.0068 220.9546 162.0068 220.2417 C
161.3042 220.2417 160.5913 220.2417 159.8892 220.2417 c
159.1865 220.2417 158.4736 220.2417 157.771 220.2417 C
157.771 220.9546 157.771 221.6567 157.771 222.3594 c
157.771 223.0723 157.771 223.7744 157.771 224.4775 C
157.771 224.4775 L
f
0 g
152.9233 214.9219 m
153.626 214.9219 154.3384 214.9219 155.0513 214.9219 c
155.7637 214.9219 156.4766 214.9219 157.1787 214.9219 C
157.1787 214.2192 157.1787 213.5068 157.1787 212.8042 c
157.1787 212.1016 157.1787 211.3887 157.1787 210.6865 C
156.4766 210.6865 155.7637 210.6865 155.0513 210.6865 c
154.3384 210.6865 153.626 210.6865 152.9233 210.6865 C
152.9233 211.3887 152.9233 212.1016 152.9233 212.8042 c
152.9233 213.5068 152.9233 214.2192 152.9233 214.9219 C
152.9233 214.9219 L
f
0 g
152.9233 224.4775 m
153.626 224.4775 154.3384 224.4775 155.0513 224.4775 c
155.7637 224.4775 156.4766 224.4775 157.1787 224.4775 C
157.1787 223.7744 157.1787 223.0723 157.1787 222.3594 c
157.1787 221.6567 157.1787 220.9546 157.1787 220.2417 C
156.4766 220.2417 155.7637 220.2417 155.0513 220.2417 c
154.3384 220.2417 153.626 220.2417 152.9233 220.2417 C
152.9233 220.9546 152.9233 221.6567 152.9233 222.3594 c
152.9233 223.0723 152.9233 223.7744 152.9233 224.4775 C
152.9233 224.4775 L
f
0 g
148.1255 205.3369 m
148.8081 205.3369 149.5107 205.3369 150.2134 205.3369 c
150.9155 205.3369 151.6284 205.3369 152.3311 205.3369 C
152.3311 204.6338 152.3311 203.9209 152.3311 203.2188 c
152.3311 202.5166 152.3311 201.8037 152.3311 201.1016 C
151.6284 201.1016 150.9155 201.1016 150.2134 201.1016 c
149.5107 201.1016 148.8081 201.1016 148.1255 201.1016 C
148.1255 201.8037 148.1255 202.5166 148.1255 203.2188 c
148.1255 203.9209 148.1255 204.6338 148.1255 205.3369 C
148.1255 205.3369 L
f
0 g
148.1255 210.1348 m
148.8081 210.1348 149.5107 210.1348 150.2134 210.1348 c
150.9155 210.1348 151.6284 210.1348 152.3311 210.1348 C
152.3311 209.4219 152.3311 208.7188 152.3311 208.0166 c
152.3311 207.3037 152.3311 206.6016 152.3311 205.8984 C
151.6284 205.8984 150.9155 205.8984 150.2134 205.8984 c
149.5107 205.8984 148.8081 205.8984 148.1255 205.8984 C
148.1255 206.6016 148.1255 207.3037 148.1255 208.0166 c
148.1255 208.7188 148.1255 209.4219 148.1255 210.1348 C
148.1255 210.1348 L
f
0 g
148.1255 214.9219 m
148.8081 214.9219 149.5107 214.9219 150.2134 214.9219 c
150.9155 214.9219 151.6284 214.9219 152.3311 214.9219 C
152.3311 214.2192 152.3311 213.5068 152.3311 212.8042 c
152.3311 212.1016 152.3311 211.3887 152.3311 210.6865 C
151.6284 210.6865 150.9155 210.6865 150.2134 210.6865 c
149.5107 210.6865 148.8081 210.6865 148.1255 210.6865 C
148.1255 211.3887 148.1255 212.1016 148.1255 212.8042 c
148.1255 213.5068 148.1255 214.2192 148.1255 214.9219 C
148.1255 214.9219 L
f
148.1255 219.6895 m
148.8081 219.6895 149.5107 219.6895 150.2134 219.6895 c
150.9155 219.6895 151.6284 219.6895 152.3311 219.6895 C
152.3311 218.9771 152.3311 218.2744 152.3311 217.5718 c
152.3311 216.8594 152.3311 216.1563 152.3311 215.4541 C
151.6284 215.4541 150.9155 215.4541 150.2134 215.4541 c
149.5107 215.4541 148.8081 215.4541 148.1255 215.4541 C
148.1255 216.1563 148.1255 216.8594 148.1255 217.5718 c
148.1255 218.2744 148.1255 218.9771 148.1255 219.6895 C
Bb
1 (Unnamed gradient) 159.9175 225.7046 -90.2906 27.8203 1 0 0 1 0 0 Bg
-0.141102 -27.8199 -27.572 0.139844 173.7041 225.6348 Xm
-41.2915 -8141.1211 -27.572 0.139844 214.9951 8366.7559 Bc
-0.141102 -27.8199 -27.572 0.139844 173.7041 225.6348 Bm
-41.2915 -8141.1211 -27.572 0.139844 173.563 197.8145 Bc
f
0 BB
*U
*u
0 g
176.6206 224.4775 m
177.3232 224.4775 178.0361 224.4775 178.7383 224.4775 c
179.4409 224.4775 180.1538 224.4775 180.8564 224.4775 C
180.8564 223.7744 180.8564 223.0723 180.8564 222.3594 c
180.8564 221.6567 180.8564 220.9546 180.8564 220.2417 C
180.1538 220.2417 179.4409 220.2417 178.7383 220.2417 c
178.0361 220.2417 177.3232 220.2417 176.6206 220.2417 C
176.6206 220.9546 176.6206 221.6567 176.6206 222.3594 c
176.6206 223.0723 176.6206 223.7744 176.6206 224.4775 C
176.6206 224.4775 L
f
0 g
181.4385 224.4775 m
182.1509 224.4775 182.8535 224.4775 183.5562 224.4775 c
184.269 224.4775 184.9712 224.4775 185.6743 224.4775 C
185.6743 223.7744 185.6743 223.0723 185.6743 222.3594 c
185.6743 221.6567 185.6743 220.9546 185.6743 220.2417 C
184.9712 220.2417 184.269 220.2417 183.5562 220.2417 c
182.8535 220.2417 182.1509 220.2417 181.4385 220.2417 C
181.4385 220.9546 181.4385 221.6567 181.4385 222.3594 c
181.4385 223.0723 181.4385 223.7744 181.4385 224.4775 C
181.4385 224.4775 L
f
0 g
195.9116 224.4775 m
196.6143 224.4775 197.3271 224.4775 198.0396 224.4775 c
198.7524 224.4775 199.4648 224.4775 200.1777 224.4775 C
200.1777 223.7744 200.1777 223.0723 200.1777 222.3594 c
200.1777 221.6567 200.1777 220.9546 200.1777 220.2417 C
199.4648 220.2417 198.7524 220.2417 198.0396 220.2417 c
197.3271 220.2417 196.6143 220.2417 195.9116 220.2417 C
195.9116 220.9546 195.9116 221.6567 195.9116 222.3594 c
195.9116 223.0723 195.9116 223.7744 195.9116 224.4775 C
195.9116 224.4775 L
f
0 g
191.084 224.4775 m
191.7969 224.4775 192.499 224.4775 193.2017 224.4775 c
193.9146 224.4775 194.627 224.4775 195.3496 224.4775 C
195.3496 223.7744 195.3496 223.0723 195.3496 222.3594 c
195.3496 221.6567 195.3496 220.9546 195.3496 220.2417 C
194.627 220.2417 193.9146 220.2417 193.2017 220.2417 c
192.499 220.2417 191.7969 220.2417 191.084 220.2417 C
191.084 220.9546 191.084 221.6567 191.084 222.3594 c
191.084 223.0723 191.084 223.7744 191.084 224.4775 C
191.084 224.4775 L
f
0 g
186.2661 205.3369 m
186.9688 205.3369 187.6812 205.3369 188.3838 205.3369 c
189.0869 205.3369 189.7891 205.3369 190.502 205.3369 C
190.502 204.6338 190.502 203.9209 190.502 203.2188 c
190.502 202.5166 190.502 201.8037 190.502 201.1016 C
189.7891 201.1016 189.0869 201.1016 188.3838 201.1016 c
187.6812 201.1016 186.9688 201.1016 186.2661 201.1016 C
186.2661 201.8037 186.2661 202.5166 186.2661 203.2188 c
186.2661 203.9209 186.2661 204.6338 186.2661 205.3369 C
186.2661 205.3369 L
f
0 g
186.2661 210.1348 m
186.9688 210.1348 187.6812 210.1348 188.3838 210.1348 c
189.0869 210.1348 189.7891 210.1348 190.502 210.1348 C
190.502 209.4219 190.502 208.7188 190.502 208.0166 c
190.502 207.3037 190.502 206.6016 190.502 205.8984 C
189.7891 205.8984 189.0869 205.8984 188.3838 205.8984 c
187.6812 205.8984 186.9688 205.8984 186.2661 205.8984 C
186.2661 206.6016 186.2661 207.3037 186.2661 208.0166 c
186.2661 208.7188 186.2661 209.4219 186.2661 210.1348 C
186.2661 210.1348 L
f
0 g
186.2661 214.9219 m
186.9688 214.9219 187.6812 214.9219 188.3838 214.9219 c
189.0869 214.9219 189.7891 214.9219 190.502 214.9219 C
190.502 214.2192 190.502 213.5068 190.502 212.8042 c
190.502 212.1016 190.502 211.3887 190.502 210.6865 C
189.7891 210.6865 189.0869 210.6865 188.3838 210.6865 c
187.6812 210.6865 186.9688 210.6865 186.2661 210.6865 C
186.2661 211.3887 186.2661 212.1016 186.2661 212.8042 c
186.2661 213.5068 186.2661 214.2192 186.2661 214.9219 C
186.2661 214.9219 L
f
0 g
186.2661 219.6895 m
186.9688 219.6895 187.6812 219.6895 188.3838 219.6895 c
189.0869 219.6895 189.7891 219.6895 190.502 219.6895 C
190.502 218.9771 190.502 218.2744 190.502 217.5718 c
190.502 216.8594 190.502 216.1563 190.502 215.4541 C
189.7891 215.4541 189.0869 215.4541 188.3838 215.4541 c
187.6812 215.4541 186.9688 215.4541 186.2661 215.4541 C
186.2661 216.1563 186.2661 216.8594 186.2661 217.5718 c
186.2661 218.2744 186.2661 218.9771 186.2661 219.6895 C
186.2661 219.6895 L
f
186.2661 224.4775 m
186.9688 224.4775 187.6812 224.4775 188.3838 224.4775 c
189.0869 224.4775 189.7891 224.4775 190.502 224.4775 C
190.502 223.7744 190.502 223.0723 190.502 222.3594 c
190.502 221.6567 190.502 220.9546 190.502 220.2417 C
189.7891 220.2417 189.0869 220.2417 188.3838 220.2417 c
187.6812 220.2417 186.9688 220.2417 186.2661 220.2417 C
186.2661 220.9546 186.2661 221.6567 186.2661 222.3594 c
186.2661 223.0723 186.2661 223.7744 186.2661 224.4775 C
Bb
1 (Unnamed gradient) 188.4155 225.5601 -90.2906 27.8202 1 0 0 1 0 0 Bg
-0.141101 -27.8198 -27.578 0.139874 202.2046 225.4902 Xm
-41.4369 -8169.7871 -27.578 0.139874 243.6416 8395.2773 Bc
-0.141101 -27.8198 -27.578 0.139874 202.2046 225.4902 Bm
-41.4369 -8169.7871 -27.578 0.139874 202.0635 197.6699 Bc
f
0 BB
*U
*u
0 g
205.437 224.4473 m
206.1196 224.4473 206.8218 224.4473 207.5347 224.4473 c
208.2573 224.4473 208.9702 224.4473 209.6724 224.4473 C
209.6724 223.7446 209.6724 223.042 209.6724 222.3296 c
209.6724 221.627 209.6724 220.9243 209.6724 220.2114 C
208.9702 220.2114 208.2573 220.2114 207.5347 220.2114 c
206.8218 220.2114 206.1196 220.2114 205.437 220.2114 C
205.437 220.9243 205.437 221.627 205.437 222.3296 c
205.437 223.042 205.437 223.7446 205.437 224.4473 C
205.437 224.4473 L
f
0 g
215.083 205.3066 m
215.7852 205.3066 216.498 205.3066 217.2002 205.3066 c
217.9033 205.3066 218.6152 205.3066 219.3184 205.3066 C
219.3184 204.6035 219.3184 203.8916 219.3184 203.1885 c
219.3184 202.4863 219.3184 201.7734 219.3184 201.0703 C
218.6152 201.0703 217.9033 201.0703 217.2002 201.0703 c
216.498 201.0703 215.7852 201.0703 215.083 201.0703 C
215.083 201.7734 215.083 202.4863 215.083 203.1885 c
215.083 203.8916 215.083 204.6035 215.083 205.3066 C
215.083 205.3066 L
f
0 g
215.083 224.4473 m
215.7852 224.4473 216.498 224.4473 217.2002 224.4473 c
217.9033 224.4473 218.6152 224.4473 219.3184 224.4473 C
219.3184 223.7446 219.3184 223.042 219.3184 222.3296 c
219.3184 221.627 219.3184 220.9243 219.3184 220.2114 C
218.6152 220.2114 217.9033 220.2114 217.2002 220.2114 c
216.498 220.2114 215.7852 220.2114 215.083 220.2114 C
215.083 220.9243 215.083 221.627 215.083 222.3296 c
215.083 223.042 215.083 223.7446 215.083 224.4473 C
215.083 224.4473 L
f
0 g
210.2549 205.3066 m
210.9673 205.3066 211.6699 205.3066 212.3726 205.3066 c
213.085 205.3066 213.7881 205.3066 214.4902 205.3066 C
214.4902 204.6035 214.4902 203.8916 214.4902 203.1885 c
214.4902 202.4863 214.4902 201.7734 214.4902 201.0703 C
213.7881 201.0703 213.085 201.0703 212.3726 201.0703 c
211.6699 201.0703 210.9673 201.0703 210.2549 201.0703 C
210.2549 201.7734 210.2549 202.4863 210.2549 203.1885 c
210.2549 203.8916 210.2549 204.6035 210.2549 205.3066 C
210.2549 205.3066 L
f
0 g
210.2549 210.1045 m
210.9673 210.1045 211.6699 210.1045 212.3726 210.1045 c
213.085 210.1045 213.7881 210.1045 214.4902 210.1045 C
214.4902 209.3916 214.4902 208.6885 214.4902 207.9863 c
214.4902 207.2734 214.4902 206.5713 214.4902 205.8691 C
213.7881 205.8691 213.085 205.8691 212.3726 205.8691 c
211.6699 205.8691 210.9673 205.8691 210.2549 205.8691 C
210.2549 206.5713 210.2549 207.2734 210.2549 207.9863 c
210.2549 208.6885 210.2549 209.3916 210.2549 210.1045 C
210.2549 210.1045 L
f
0 g
210.2549 214.8618 m
210.9673 214.8618 211.6699 214.8618 212.3726 214.8618 c
213.085 214.8618 213.7881 214.8618 214.4902 214.8618 C
214.4902 214.1592 214.4902 213.4565 214.4902 212.7437 c
214.4902 212.0415 214.4902 211.3389 214.4902 210.626 C
213.7881 210.626 213.085 210.626 212.3726 210.626 c
211.6699 210.626 210.9673 210.626 210.2549 210.626 C
210.2549 211.3389 210.2549 212.0415 210.2549 212.7437 c
210.2549 213.4565 210.2549 214.1592 210.2549 214.8618 C
210.2549 214.8618 L
f
0 g
210.2549 219.6597 m
210.9673 219.6597 211.6699 219.6597 212.3726 219.6597 c
213.085 219.6597 213.7881 219.6597 214.4902 219.6597 C
214.4902 218.9468 214.4902 218.2441 214.4902 217.542 c
214.4902 216.8291 214.4902 216.1265 214.4902 215.4238 C
213.7881 215.4238 213.085 215.4238 212.3726 215.4238 c
211.6699 215.4238 210.9673 215.4238 210.2549 215.4238 C
210.2549 216.1265 210.2549 216.8291 210.2549 217.542 c
210.2549 218.2441 210.2549 218.9468 210.2549 219.6597 C
210.2549 219.6597 L
f
0 g
210.2549 224.4473 m
210.9673 224.4473 211.6699 224.4473 212.3726 224.4473 c
213.085 224.4473 213.7881 224.4473 214.4902 224.4473 C
214.4902 223.7446 214.4902 223.042 214.4902 222.3296 c
214.4902 221.627 214.4902 220.9243 214.4902 220.2114 C
213.7881 220.2114 213.085 220.2114 212.3726 220.2114 c
211.6699 220.2114 210.9673 220.2114 210.2549 220.2114 C
210.2549 220.9243 210.2549 221.627 210.2549 222.3296 c
210.2549 223.042 210.2549 223.7446 210.2549 224.4473 C
210.2549 224.4473 L
f
205.437 205.3066 m
206.1196 205.3066 206.8218 205.3066 207.5347 205.3066 c
208.2573 205.3066 208.9702 205.3066 209.6724 205.3066 C
209.6724 204.6035 209.6724 203.8916 209.6724 203.1885 c
209.6724 202.4863 209.6724 201.7734 209.6724 201.0703 C
208.9702 201.0703 208.2573 201.0703 207.5347 201.0703 c
206.8218 201.0703 206.1196 201.0703 205.437 201.0703 C
205.437 201.7734 205.437 202.4863 205.437 203.1885 c
205.437 203.8916 205.437 204.6035 205.437 205.3066 C
Bb
1 (Unnamed gradient) 212.4414 225.438 -90.2906 27.8202 1 0 0 1 0 0 Bg
-0.141101 -27.8198 -17.9995 0.091293 221.4414 225.3926 Xm
-41.5591 -8193.8799 -17.9995 0.091293 263 8419.2725 Bc
-0.141101 -27.8198 -17.9995 0.091293 221.4414 225.3926 Bm
-41.5591 -8193.8799 -17.9995 0.091293 221.3008 197.5732 Bc
f
0 BB
*U
*u
0 g
224.4072 219.6597 m
225.0898 219.6597 225.792 219.6597 226.4951 219.6597 c
227.1973 219.6597 227.9199 219.6597 228.6426 219.6597 C
228.6426 218.9468 228.6426 218.2441 228.6426 217.542 c
228.6426 216.8291 228.6426 216.1265 228.6426 215.4238 C
227.9199 215.4238 227.1973 215.4238 226.4951 215.4238 c
225.792 215.4238 225.0898 215.4238 224.4072 215.4238 C
224.4072 216.1265 224.4072 216.8291 224.4072 217.542 c
224.4072 218.2441 224.4072 218.9468 224.4072 219.6597 C
224.4072 219.6597 L
f
0 g
243.6982 210.1045 m
244.4014 210.1045 245.1133 210.1045 245.8154 210.1045 c
246.5186 210.1045 247.2314 210.1045 247.9639 210.1045 C
247.9639 209.3916 247.9639 208.6787 247.9639 207.9658 c
247.9639 207.2539 247.9639 206.541 247.9639 205.8389 C
247.2314 205.8389 246.5186 205.8389 245.8154 205.8389 c
245.1133 205.8389 244.4014 205.8389 243.6982 205.8389 C
243.6982 206.541 243.6982 207.2539 243.6982 207.9658 c
243.6982 208.6787 243.6982 209.3916 243.6982 210.1045 C
243.6982 210.1045 L
f
0 g
243.6982 214.8618 m
244.4014 214.8618 245.1133 214.8618 245.8154 214.8618 c
246.5186 214.8618 247.2314 214.8618 247.9639 214.8618 C
247.9639 214.1592 247.9639 213.4565 247.9639 212.7437 c
247.9639 212.0415 247.9639 211.3389 247.9639 210.626 C
247.2314 210.626 246.5186 210.626 245.8154 210.626 c
245.1133 210.626 244.4014 210.626 243.6982 210.626 C
243.6982 211.3389 243.6982 212.0415 243.6982 212.7437 c
243.6982 213.4565 243.6982 214.1592 243.6982 214.8618 C
243.6982 214.8618 L
f
0 g
243.6982 219.6597 m
244.4014 219.6597 245.1133 219.6597 245.8154 219.6597 c
246.5186 219.6597 247.2314 219.6597 247.9639 219.6597 C
247.9639 218.9468 247.9639 218.2441 247.9639 217.542 c
247.9639 216.8291 247.9639 216.1265 247.9639 215.4238 C
247.2314 215.4238 246.5186 215.4238 245.8154 215.4238 c
245.1133 215.4238 244.4014 215.4238 243.6982 215.4238 C
243.6982 216.1265 243.6982 216.8291 243.6982 217.542 c
243.6982 218.2441 243.6982 218.9468 243.6982 219.6597 C
243.6982 219.6597 L
f
0 g
238.8701 205.3066 m
239.583 205.3066 240.2852 205.3066 240.9883 205.3066 c
241.7012 205.3066 242.4033 205.3066 243.1064 205.3066 C
243.1064 204.6035 243.1064 203.8916 243.1064 203.1885 c
243.1064 202.4863 243.1064 201.7734 243.1064 201.0703 C
242.4033 201.0703 241.7012 201.0703 240.9883 201.0703 c
240.2852 201.0703 239.583 201.0703 238.8701 201.0703 C
238.8701 201.7734 238.8701 202.4863 238.8701 203.1885 c
238.8701 203.8916 238.8701 204.6035 238.8701 205.3066 C
238.8701 205.3066 L
f
0 g
238.8701 224.4473 m
239.583 224.4473 240.2852 224.4473 240.9883 224.4473 c
241.7012 224.4473 242.4033 224.4473 243.1064 224.4473 C
243.1064 223.7446 243.1064 223.0317 243.1064 222.3193 c
243.1064 221.6064 243.1064 220.9038 243.1064 220.2114 C
242.4033 220.2114 241.7012 220.2114 240.9883 220.2114 c
240.2852 220.2114 239.583 220.2114 238.8701 220.2114 C
238.8701 220.9038 238.8701 221.6064 238.8701 222.3193 c
238.8701 223.0317 238.8701 223.7446 238.8701 224.4473 C
238.8701 224.4473 L
f
0 g
234.0527 205.3066 m
234.7549 205.3066 235.4678 205.3066 236.1709 205.3066 c
236.873 205.3066 237.5859 205.3066 238.2881 205.3066 C
238.2881 204.6035 238.2881 203.8916 238.2881 203.1885 c
238.2881 202.4863 238.2881 201.7734 238.2881 201.0703 C
237.5859 201.0703 236.873 201.0703 236.1709 201.0703 c
235.4678 201.0703 234.7549 201.0703 234.0527 201.0703 C
234.0527 201.7734 234.0527 202.4863 234.0527 203.1885 c
234.0527 203.8916 234.0527 204.6035 234.0527 205.3066 C
234.0527 205.3066 L
f
0 g
234.0527 224.4473 m
234.7549 224.4473 235.4678 224.4473 236.1709 224.4473 c
236.873 224.4473 237.5859 224.4473 238.2881 224.4473 C
238.2881 223.7446 238.2881 223.0317 238.2881 222.3193 c
238.2881 221.6064 238.2881 220.9038 238.2881 220.2114 C
237.5859 220.2114 236.873 220.2114 236.1709 220.2114 c
235.4678 220.2114 234.7549 220.2114 234.0527 220.2114 C
234.0527 220.9038 234.0527 221.6064 234.0527 222.3193 c
234.0527 223.0317 234.0527 223.7446 234.0527 224.4473 C
234.0527 224.4473 L
f
0 g
229.2051 205.3066 m
229.9072 205.3066 230.6201 205.3066 231.333 205.3066 c
232.0449 205.3066 232.7578 205.3066 233.46 205.3066 C
233.46 204.6035 233.46 203.8916 233.46 203.1885 c
233.46 202.4863 233.46 201.7734 233.46 201.0703 C
232.7578 201.0703 232.0449 201.0703 231.333 201.0703 c
230.6201 201.0703 229.9072 201.0703 229.2051 201.0703 C
229.2051 201.7734 229.2051 202.4863 229.2051 203.1885 c
229.2051 203.8916 229.2051 204.6035 229.2051 205.3066 C
229.2051 205.3066 L
f
0 g
229.2051 224.4473 m
229.9072 224.4473 230.6201 224.4473 231.333 224.4473 c
232.0449 224.4473 232.7578 224.4473 233.46 224.4473 C
233.46 223.7446 233.46 223.0317 233.46 222.3193 c
233.46 221.6064 233.46 220.9038 233.46 220.2114 C
232.7578 220.2114 232.0449 220.2114 231.333 220.2114 c
230.6201 220.2114 229.9072 220.2114 229.2051 220.2114 C
229.2051 220.9038 229.2051 221.6064 229.2051 222.3193 c
229.2051 223.0317 229.2051 223.7446 229.2051 224.4473 C
229.2051 224.4473 L
f
0 g
224.4072 210.1045 m
225.0898 210.1045 225.792 210.1045 226.4951 210.1045 c
227.1973 210.1045 227.9199 210.1045 228.6426 210.1045 C
228.6426 209.3916 228.6426 208.6787 228.6426 207.9658 c
228.6426 207.2539 228.6426 206.541 228.6426 205.8389 C
227.9199 205.8389 227.1973 205.8389 226.4951 205.8389 c
225.792 205.8389 225.0898 205.8389 224.4072 205.8389 C
224.4072 206.541 224.4072 207.2539 224.4072 207.9658 c
224.4072 208.6787 224.4072 209.3916 224.4072 210.1045 C
224.4072 210.1045 L
f
224.4072 214.8618 m
225.0898 214.8618 225.792 214.8618 226.4951 214.8618 c
227.1973 214.8618 227.9199 214.8618 228.6426 214.8618 C
228.6426 214.1592 228.6426 213.4565 228.6426 212.7437 c
228.6426 212.0415 228.6426 211.3389 228.6426 210.626 C
227.9199 210.626 227.1973 210.626 226.4951 210.626 c
225.792 210.626 225.0898 210.626 224.4072 210.626 C
224.4072 211.3389 224.4072 212.0415 224.4072 212.7437 c
224.4072 213.4565 224.4072 214.1592 224.4072 214.8618 C
Bb
1 (Unnamed gradient) 236.25 225.3174 -90.2906 27.8202 1 0 0 1 0 0 Bg
-0.141101 -27.8198 -27.6261 0.140119 250.0625 225.2476 Xm
-41.6804 -8217.8086 -27.6261 0.140119 291.7432 8443.0557 Bc
-0.141101 -27.8198 -27.6261 0.140119 250.0625 225.2476 Bm
-41.6804 -8217.8086 -27.6261 0.140119 249.9219 197.4277 Bc
f
0 BB
*U
*u
0 g
253.0225 224.4473 m
253.7051 224.4473 254.4072 224.4473 255.1104 224.4473 c
255.8125 224.4473 256.5254 224.4473 257.2275 224.4473 C
257.2275 223.7446 257.2275 223.042 257.2275 222.3296 c
257.2275 221.627 257.2275 220.9243 257.2275 220.2114 C
256.5254 220.2114 255.8125 220.2114 255.1104 220.2114 c
254.4072 220.2114 253.7051 220.2114 253.0225 220.2114 C
253.0225 220.9243 253.0225 221.627 253.0225 222.3296 c
253.0225 223.042 253.0225 223.7446 253.0225 224.4473 C
253.0225 224.4473 L
f
0 g
272.3135 205.3066 m
273.0166 205.3066 273.7285 205.3066 274.4316 205.3066 c
275.1338 205.3066 275.8369 205.3066 276.5498 205.3066 C
276.5498 204.6035 276.5498 203.8916 276.5498 203.1885 c
276.5498 202.4863 276.5498 201.7734 276.5498 201.0703 C
275.8369 201.0703 275.1338 201.0703 274.4316 201.0703 c
273.7285 201.0703 273.0166 201.0703 272.3135 201.0703 C
272.3135 201.7734 272.3135 202.4863 272.3135 203.1885 c
272.3135 203.8916 272.3135 204.6035 272.3135 205.3066 C
272.3135 205.3066 L
f
0 g
272.3135 210.1045 m
273.0166 210.1045 273.7285 210.1045 274.4316 210.1045 c
275.1338 210.1045 275.8369 210.1045 276.5498 210.1045 C
276.5498 209.3916 276.5498 208.6787 276.5498 207.9658 c
276.5498 207.2539 276.5498 206.541 276.5498 205.8389 C
275.8369 205.8389 275.1338 205.8389 274.4316 205.8389 c
273.7285 205.8389 273.0166 205.8389 272.3135 205.8389 C
272.3135 206.541 272.3135 207.2539 272.3135 207.9658 c
272.3135 208.6787 272.3135 209.3916 272.3135 210.1045 C
272.3135 210.1045 L
f
0 g
272.3135 214.8618 m
273.0166 214.8618 273.7285 214.8618 274.4316 214.8618 c
275.1338 214.8618 275.8369 214.8618 276.5498 214.8618 C
276.5498 214.1592 276.5498 213.4565 276.5498 212.7437 c
276.5498 212.0415 276.5498 211.3389 276.5498 210.626 C
275.8369 210.626 275.1338 210.626 274.4316 210.626 c
273.7285 210.626 273.0166 210.626 272.3135 210.626 C
272.3135 211.3389 272.3135 212.0415 272.3135 212.7437 c
272.3135 213.4565 272.3135 214.1592 272.3135 214.8618 C
272.3135 214.8618 L
f
0 g
272.3135 219.6597 m
273.0166 219.6597 273.7285 219.6597 274.4316 219.6597 c
275.1338 219.6597 275.8369 219.6597 276.5498 219.6597 C
276.5498 218.9468 276.5498 218.2441 276.5498 217.542 c
276.5498 216.8291 276.5498 216.1265 276.5498 215.4238 C
275.8369 215.4238 275.1338 215.4238 274.4316 215.4238 c
273.7285 215.4238 273.0166 215.4238 272.3135 215.4238 C
272.3135 216.1265 272.3135 216.8291 272.3135 217.542 c
272.3135 218.2441 272.3135 218.9468 272.3135 219.6597 C
272.3135 219.6597 L
f
0 g
272.3135 224.4473 m
273.0166 224.4473 273.7285 224.4473 274.4316 224.4473 c
275.1338 224.4473 275.8369 224.4473 276.5498 224.4473 C
276.5498 223.7446 276.5498 223.042 276.5498 222.3296 c
276.5498 221.627 276.5498 220.9243 276.5498 220.2114 C
275.8369 220.2114 275.1338 220.2114 274.4316 220.2114 c
273.7285 220.2114 273.0166 220.2114 272.3135 220.2114 C
272.3135 220.9243 272.3135 221.627 272.3135 222.3296 c
272.3135 223.042 272.3135 223.7446 272.3135 224.4473 C
272.3135 224.4473 L
f
0 g
267.4863 210.1045 m
268.1982 210.1045 268.9014 210.1045 269.6035 210.1045 c
270.3164 210.1045 271.0186 210.1045 271.7217 210.1045 C
271.7217 209.3916 271.7217 208.6787 271.7217 207.9658 c
271.7217 207.2539 271.7217 206.541 271.7217 205.8389 C
271.0186 205.8389 270.3164 205.8389 269.6035 205.8389 c
268.9014 205.8389 268.1982 205.8389 267.4863 205.8389 C
267.4863 206.541 267.4863 207.2539 267.4863 207.9658 c
267.4863 208.6787 267.4863 209.3916 267.4863 210.1045 C
267.4863 210.1045 L
f
0 g
262.668 214.8618 m
263.3711 214.8618 264.083 214.8618 264.7861 214.8618 c
265.4883 214.8618 266.2012 214.8618 266.9033 214.8618 C
266.9033 214.1592 266.9033 213.4565 266.9033 212.7437 c
266.9033 212.0415 266.9033 211.3389 266.9033 210.626 C
266.2012 210.626 265.4883 210.626 264.7861 210.626 c
264.083 210.626 263.3711 210.626 262.668 210.626 C
262.668 211.3389 262.668 212.0415 262.668 212.7437 c
262.668 213.4565 262.668 214.1592 262.668 214.8618 C
262.668 214.8618 L
f
0 g
257.8398 219.6597 m
258.5527 219.6597 259.2559 219.6597 259.958 219.6597 c
260.6709 219.6597 261.373 219.6597 262.0762 219.6597 C
262.0762 218.9468 262.0762 218.2441 262.0762 217.542 c
262.0762 216.8291 262.0762 216.1265 262.0762 215.4238 C
261.373 215.4238 260.6709 215.4238 259.958 215.4238 c
259.2559 215.4238 258.5527 215.4238 257.8398 215.4238 C
257.8398 216.1265 257.8398 216.8291 257.8398 217.542 c
257.8398 218.2441 257.8398 218.9468 257.8398 219.6597 C
257.8398 219.6597 L
f
0 g
253.0225 205.3066 m
253.7051 205.3066 254.4072 205.3066 255.1104 205.3066 c
255.8125 205.3066 256.5254 205.3066 257.2275 205.3066 C
257.2275 204.6035 257.2275 203.8916 257.2275 203.1885 c
257.2275 202.4863 257.2275 201.7734 257.2275 201.0703 C
256.5254 201.0703 255.8125 201.0703 255.1104 201.0703 c
254.4072 201.0703 253.7051 201.0703 253.0225 201.0703 C
253.0225 201.7734 253.0225 202.4863 253.0225 203.1885 c
253.0225 203.8916 253.0225 204.6035 253.0225 205.3066 C
253.0225 205.3066 L
f
0 g
253.0225 210.1045 m
253.7051 210.1045 254.4072 210.1045 255.1201 210.1045 c
255.8428 210.1045 256.5557 210.1045 257.2578 210.1045 C
257.2578 209.3916 257.2578 208.6787 257.2578 207.9658 c
257.2578 207.2539 257.2578 206.541 257.2578 205.8389 C
256.5557 205.8389 255.8428 205.8389 255.1201 205.8389 c
254.4072 205.8389 253.7051 205.8389 253.0225 205.8389 C
253.0225 206.541 253.0225 207.2539 253.0225 207.9658 c
253.0225 208.6787 253.0225 209.3916 253.0225 210.1045 C
253.0225 210.1045 L
f
0 g
253.0225 214.8618 m
253.7051 214.8618 254.4072 214.8618 255.1201 214.8618 c
255.8428 214.8618 256.5557 214.8618 257.2578 214.8618 C
257.2578 214.1592 257.2578 213.4565 257.2578 212.7437 c
257.2578 212.0415 257.2578 211.3389 257.2578 210.626 C
256.5557 210.626 255.8428 210.626 255.1201 210.626 c
254.4072 210.626 253.7051 210.626 253.0225 210.626 C
253.0225 211.3389 253.0225 212.0415 253.0225 212.7437 c
253.0225 213.4565 253.0225 214.1592 253.0225 214.8618 C
253.0225 214.8618 L
f
253.0225 219.6597 m
253.7051 219.6597 254.4072 219.6597 255.1201 219.6597 c
255.8428 219.6597 256.5557 219.6597 257.2578 219.6597 C
257.2578 218.9468 257.2578 218.2441 257.2578 217.542 c
257.2578 216.8291 257.2578 216.1265 257.2578 215.4238 C
256.5557 215.4238 255.8428 215.4238 255.1201 215.4238 c
254.4072 215.4238 253.7051 215.4238 253.0225 215.4238 C
253.0225 216.1265 253.0225 216.8291 253.0225 217.542 c
253.0225 218.2441 253.0225 218.9468 253.0225 219.6597 C
Bb
1 (Unnamed gradient) 264.8486 225.1724 -90.2906 27.8202 1 0 0 1 0 0 Bg
-0.141101 -27.8198 -27.6453 0.140216 278.6719 225.1021 Xm
-41.8264 -8246.5762 -27.6453 0.140216 320.498 8471.6777 Bc
-0.141101 -27.8198 -27.6453 0.140216 278.6719 225.1021 Bm
-41.8264 -8246.5762 -27.6453 0.140216 278.5313 197.2822 Bc
f
0 BB
*U
*u
0 g
282.0996 219.6895 m
282.7822 219.6895 283.4844 219.6895 284.1973 219.6895 c
284.9199 219.6895 285.6328 219.6895 286.335 219.6895 C
286.335 218.957 286.335 218.2441 286.335 217.542 c
286.335 216.8291 286.335 216.1265 286.335 215.4238 C
285.6328 215.4238 284.9199 215.4238 284.1973 215.4238 c
283.4844 215.4238 282.7822 215.4238 282.0996 215.4238 C
282.0996 216.1265 282.0996 216.8291 282.0996 217.542 c
282.0996 218.2441 282.0996 218.957 282.0996 219.6895 C
282.0996 219.6895 L
f
0 g
301.3906 210.1045 m
302.0938 210.1045 302.8066 210.1045 303.5186 210.1045 c
304.2412 210.1045 304.9443 210.1045 305.6563 210.1045 C
305.6563 209.3916 305.6563 208.6885 305.6563 207.9863 c
305.6563 207.2734 305.6563 206.5713 305.6563 205.8691 C
304.9443 205.8691 304.2412 205.8691 303.5186 205.8691 c
302.8066 205.8691 302.0938 205.8691 301.3906 205.8691 C
301.3906 206.5713 301.3906 207.2734 301.3906 207.9863 c
301.3906 208.6885 301.3906 209.3916 301.3906 210.1045 C
301.3906 210.1045 L
f
0 g
301.3906 214.8921 m
302.0938 214.8921 302.8066 214.8921 303.5186 214.8921 c
304.2412 214.8921 304.9443 214.8921 305.6563 214.8921 C
305.6563 214.189 305.6563 213.4766 305.6563 212.7744 c
305.6563 212.0713 305.6563 211.3691 305.6563 210.6563 C
304.9443 210.6563 304.2412 210.6563 303.5186 210.6563 c
302.8066 210.6563 302.0938 210.6563 301.3906 210.6563 C
301.3906 211.3691 301.3906 212.0713 301.3906 212.7744 c
301.3906 213.4766 301.3906 214.189 301.3906 214.8921 C
301.3906 214.8921 L
f
0 g
301.3906 224.4473 m
302.0938 224.4473 302.8066 224.4473 303.5186 224.4473 c
304.2412 224.4473 304.9443 224.4473 305.6563 224.4473 C
305.6563 223.7446 305.6563 223.042 305.6563 222.3296 c
305.6563 221.627 305.6563 220.9243 305.6563 220.2114 C
304.9443 220.2114 304.2412 220.2114 303.5186 220.2114 c
302.8066 220.2114 302.0938 220.2114 301.3906 220.2114 C
301.3906 220.9243 301.3906 221.627 301.3906 222.3296 c
301.3906 223.042 301.3906 223.7446 301.3906 224.4473 C
301.3906 224.4473 L
f
0 g
296.5635 205.3066 m
297.2754 205.3066 297.9785 205.3066 298.6807 205.3066 c
299.3936 205.3066 300.0957 205.3066 300.7988 205.3066 C
300.7988 204.6035 300.7988 203.8916 300.7988 203.1885 c
300.7988 202.4863 300.7988 201.7734 300.7988 201.0703 C
300.0957 201.0703 299.3936 201.0703 298.6807 201.0703 c
297.9785 201.0703 297.2754 201.0703 296.5635 201.0703 C
296.5635 201.7734 296.5635 202.4863 296.5635 203.1885 c
296.5635 203.8916 296.5635 204.6035 296.5635 205.3066 C
296.5635 205.3066 L
f
0 g
296.5635 214.8921 m
297.2754 214.8921 297.9785 214.8921 298.6807 214.8921 c
299.3936 214.8921 300.0957 214.8921 300.7988 214.8921 C
300.7988 214.189 300.7988 213.4766 300.7988 212.7744 c
300.7988 212.0713 300.7988 211.3691 300.7988 210.6563 C
300.0957 210.6563 299.3936 210.6563 298.6807 210.6563 c
297.9785 210.6563 297.2754 210.6563 296.5635 210.6563 C
296.5635 211.3691 296.5635 212.0713 296.5635 212.7744 c
296.5635 213.4766 296.5635 214.189 296.5635 214.8921 C
296.5635 214.8921 L
f
0 g
296.5635 224.4473 m
297.2754 224.4473 297.9785 224.4473 298.6807 224.4473 c
299.3936 224.4473 300.0957 224.4473 300.7988 224.4473 C
300.7988 223.7446 300.7988 223.042 300.7988 222.3296 c
300.7988 221.627 300.7988 220.9243 300.7988 220.2114 C
300.0957 220.2114 299.3936 220.2114 298.6807 220.2114 c
297.9785 220.2114 297.2754 220.2114 296.5635 220.2114 C
296.5635 220.9243 296.5635 221.627 296.5635 222.3296 c
296.5635 223.042 296.5635 223.7446 296.5635 224.4473 C
296.5635 224.4473 L
f
0 g
291.7451 205.3066 m
292.4482 205.3066 293.1602 205.3066 293.8633 205.3066 c
294.5654 205.3066 295.2783 205.3066 295.9805 205.3066 C
295.9805 204.6035 295.9805 203.8916 295.9805 203.1885 c
295.9805 202.4863 295.9805 201.7734 295.9805 201.0703 C
295.2783 201.0703 294.5654 201.0703 293.8633 201.0703 c
293.1602 201.0703 292.4482 201.0703 291.7451 201.0703 C
291.7451 201.7734 291.7451 202.4863 291.7451 203.1885 c
291.7451 203.8916 291.7451 204.6035 291.7451 205.3066 C
291.7451 205.3066 L
f
0 g
291.7451 214.8921 m
292.4482 214.8921 293.1602 214.8921 293.8633 214.8921 c
294.5654 214.8921 295.2783 214.8921 295.9805 214.8921 C
295.9805 214.189 295.9805 213.4766 295.9805 212.7744 c
295.9805 212.0713 295.9805 211.3691 295.9805 210.6563 C
295.2783 210.6563 294.5654 210.6563 293.8633 210.6563 c
293.1602 210.6563 292.4482 210.6563 291.7451 210.6563 C
291.7451 211.3691 291.7451 212.0713 291.7451 212.7744 c
291.7451 213.4766 291.7451 214.189 291.7451 214.8921 C
291.7451 214.8921 L
f
0 g
291.7451 224.4473 m
292.4482 224.4473 293.1602 224.4473 293.8633 224.4473 c
294.5654 224.4473 295.2783 224.4473 295.9805 224.4473 C
295.9805 223.7446 295.9805 223.042 295.9805 222.3296 c
295.9805 221.627 295.9805 220.9243 295.9805 220.2114 C
295.2783 220.2114 294.5654 220.2114 293.8633 220.2114 c
293.1602 220.2114 292.4482 220.2114 291.7451 220.2114 C
291.7451 220.9243 291.7451 221.627 291.7451 222.3296 c
291.7451 223.042 291.7451 223.7446 291.7451 224.4473 C
291.7451 224.4473 L
f
0 g
286.917 205.3066 m
287.6299 205.3066 288.333 205.3066 289.0352 205.3066 c
289.748 205.3066 290.4502 205.3066 291.1533 205.3066 C
291.1533 204.6035 291.1533 203.8916 291.1533 203.1885 c
291.1533 202.4863 291.1533 201.7734 291.1533 201.0703 C
290.4502 201.0703 289.748 201.0703 289.0352 201.0703 c
288.333 201.0703 287.6299 201.0703 286.917 201.0703 C
286.917 201.7734 286.917 202.4863 286.917 203.1885 c
286.917 203.8916 286.917 204.6035 286.917 205.3066 C
286.917 205.3066 L
f
0 g
286.917 214.8921 m
287.6299 214.8921 288.333 214.8921 289.0352 214.8921 c
289.748 214.8921 290.4502 214.8921 291.1533 214.8921 C
291.1533 214.189 291.1533 213.4766 291.1533 212.7744 c
291.1533 212.0713 291.1533 211.3691 291.1533 210.6563 C
290.4502 210.6563 289.748 210.6563 289.0352 210.6563 c
288.333 210.6563 287.6299 210.6563 286.917 210.6563 C
286.917 211.3691 286.917 212.0713 286.917 212.7744 c
286.917 213.4766 286.917 214.189 286.917 214.8921 C
286.917 214.8921 L
f
0 g
286.917 224.4473 m
287.6299 224.4473 288.333 224.4473 289.0352 224.4473 c
289.748 224.4473 290.4502 224.4473 291.1533 224.4473 C
291.1533 223.7446 291.1533 223.042 291.1533 222.3296 c
291.1533 221.627 291.1533 220.9243 291.1533 220.2114 C
290.4502 220.2114 289.748 220.2114 289.0352 220.2114 c
288.333 220.2114 287.6299 220.2114 286.917 220.2114 C
286.917 220.9243 286.917 221.627 286.917 222.3296 c
286.917 223.042 286.917 223.7446 286.917 224.4473 C
286.917 224.4473 L
f
0 g
282.0996 205.3066 m
282.7822 205.3066 283.4844 205.3066 284.1973 205.3066 c
284.9199 205.3066 285.6328 205.3066 286.335 205.3066 C
286.335 204.6035 286.335 203.8916 286.335 203.1885 c
286.335 202.4863 286.335 201.7734 286.335 201.0703 C
285.6328 201.0703 284.9199 201.0703 284.1973 201.0703 c
283.4844 201.0703 282.7822 201.0703 282.0996 201.0703 C
282.0996 201.7734 282.0996 202.4863 282.0996 203.1885 c
282.0996 203.8916 282.0996 204.6035 282.0996 205.3066 C
282.0996 205.3066 L
f
282.0996 214.8921 m
282.7822 214.8921 283.4844 214.8921 284.1973 214.8921 c
284.9199 214.8921 285.6328 214.8921 286.335 214.8921 C
286.335 214.189 286.335 213.4766 286.335 212.7744 c
286.335 212.0713 286.335 211.3691 286.335 210.6563 C
285.6328 210.6563 284.9199 210.6563 284.1973 210.6563 c
283.4844 210.6563 282.7822 210.6563 282.0996 210.6563 C
282.0996 211.3691 282.0996 212.0713 282.0996 212.7744 c
282.0996 213.4766 282.0996 214.189 282.0996 214.8921 C
Bb
1 (Unnamed gradient) 293.9404 225.0244 -90.2906 27.8201 1 0 0 1 0 0 Bg
-0.141101 -27.8197 -27.6261 0.140119 307.7529 224.9546 Xm
-41.9747 -8275.8164 -27.6261 0.140119 349.7275 8500.7705 Bc
-0.141101 -27.8197 -27.6261 0.140119 307.7529 224.9546 Bm
-41.9747 -8275.8164 -27.6261 0.140119 307.6123 197.1348 Bc
f
0 BB
*U
U
*u
0 g
108.4038 283.6602 m
109.0864 283.6602 109.7886 283.6602 110.4912 283.6602 c
111.1943 283.6602 111.9067 283.6602 112.6089 283.6602 C
112.6089 282.9575 112.6089 282.2549 112.6089 281.5425 c
112.6089 280.8398 112.6089 280.1372 112.6089 279.4243 C
111.9067 279.4243 111.1943 279.4243 110.4912 279.4243 c
109.7886 279.4243 109.0864 279.4243 108.4038 279.4243 C
108.4038 280.1372 108.4038 280.8398 108.4038 281.5425 c
108.4038 282.2549 108.4038 282.9575 108.4038 283.6602 C
108.4038 283.6602 L
f
0 g
127.6948 264.5195 m
128.3975 264.5195 129.1104 264.5195 129.8125 264.5195 c
130.5151 264.5195 131.2178 264.5195 131.9307 264.5195 C
131.9307 263.8169 131.9307 263.104 131.9307 262.4014 c
131.9307 261.6992 131.9307 260.9863 131.9307 260.2837 C
131.2178 260.2837 130.5151 260.2837 129.8125 260.2837 c
129.1104 260.2837 128.3975 260.2837 127.6948 260.2837 C
127.6948 260.9863 127.6948 261.6992 127.6948 262.4014 c
127.6948 263.104 127.6948 263.8169 127.6948 264.5195 C
127.6948 264.5195 L
f
0 g
127.6948 269.3169 m
128.3975 269.3169 129.1104 269.3169 129.8125 269.3169 c
130.5151 269.3169 131.2178 269.3169 131.9307 269.3169 C
131.9307 268.6045 131.9307 267.8921 131.9307 267.1792 c
131.9307 266.4668 131.9307 265.7539 131.9307 265.0513 C
131.2178 265.0513 130.5151 265.0513 129.8125 265.0513 c
129.1104 265.0513 128.3975 265.0513 127.6948 265.0513 C
127.6948 265.7539 127.6948 266.4668 127.6948 267.1792 c
127.6948 267.8921 127.6948 268.6045 127.6948 269.3169 C
127.6948 269.3169 L
f
0 g
127.6948 274.0747 m
128.3975 274.0747 129.1104 274.0747 129.8125 274.0747 c
130.5151 274.0747 131.2178 274.0747 131.9307 274.0747 C
131.9307 273.3721 131.9307 272.6694 131.9307 271.957 c
131.9307 271.2544 131.9307 270.5518 131.9307 269.8389 C
131.2178 269.8389 130.5151 269.8389 129.8125 269.8389 c
129.1104 269.8389 128.3975 269.8389 127.6948 269.8389 C
127.6948 270.5518 127.6948 271.2544 127.6948 271.957 c
127.6948 272.6694 127.6948 273.3721 127.6948 274.0747 C
127.6948 274.0747 L
f
0 g
127.6948 278.8726 m
128.3975 278.8726 129.1104 278.8726 129.8125 278.8726 c
130.5151 278.8726 131.2178 278.8726 131.9307 278.8726 C
131.9307 278.1597 131.9307 277.457 131.9307 276.7549 c
131.9307 276.042 131.9307 275.3394 131.9307 274.6367 C
131.2178 274.6367 130.5151 274.6367 129.8125 274.6367 c
129.1104 274.6367 128.3975 274.6367 127.6948 274.6367 C
127.6948 275.3394 127.6948 276.042 127.6948 276.7549 c
127.6948 277.457 127.6948 278.1597 127.6948 278.8726 C
127.6948 278.8726 L
f
0 g
127.6948 283.6602 m
128.3975 283.6602 129.1104 283.6602 129.8125 283.6602 c
130.5151 283.6602 131.2178 283.6602 131.9307 283.6602 C
131.9307 282.9575 131.9307 282.2549 131.9307 281.5425 c
131.9307 280.8398 131.9307 280.1372 131.9307 279.4243 C
131.2178 279.4243 130.5151 279.4243 129.8125 279.4243 c
129.1104 279.4243 128.3975 279.4243 127.6948 279.4243 C
127.6948 280.1372 127.6948 280.8398 127.6948 281.5425 c
127.6948 282.2549 127.6948 282.9575 127.6948 283.6602 C
127.6948 283.6602 L
f
0 g
122.8672 269.3169 m
123.5796 269.3169 124.2822 269.3169 124.9849 269.3169 c
125.6973 269.3169 126.3999 269.3169 127.1025 269.3169 C
127.1025 268.6045 127.1025 267.8921 127.1025 267.1792 c
127.1025 266.4668 127.1025 265.7539 127.1025 265.0513 C
126.3999 265.0513 125.6973 265.0513 124.9849 265.0513 c
124.2822 265.0513 123.5796 265.0513 122.8672 265.0513 C
122.8672 265.7539 122.8672 266.4668 122.8672 267.1792 c
122.8672 267.8921 122.8672 268.6045 122.8672 269.3169 C
122.8672 269.3169 L
f
0 g
118.0493 274.0747 m
118.752 274.0747 119.4644 274.0747 120.167 274.0747 c
120.8696 274.0747 121.582 274.0747 122.2847 274.0747 C
122.2847 273.3721 122.2847 272.6694 122.2847 271.957 c
122.2847 271.2544 122.2847 270.5518 122.2847 269.8389 C
121.582 269.8389 120.8696 269.8389 120.167 269.8389 c
119.4644 269.8389 118.752 269.8389 118.0493 269.8389 C
118.0493 270.5518 118.0493 271.2544 118.0493 271.957 c
118.0493 272.6694 118.0493 273.3721 118.0493 274.0747 C
118.0493 274.0747 L
f
0 g
113.2212 278.8726 m
113.9341 278.8726 114.6367 278.8726 115.3394 278.8726 c
116.0518 278.8726 116.7544 278.8726 117.457 278.8726 C
117.457 278.1597 117.457 277.457 117.457 276.7549 c
117.457 276.042 117.457 275.3394 117.457 274.6367 C
116.7544 274.6367 116.0518 274.6367 115.3394 274.6367 c
114.6367 274.6367 113.9341 274.6367 113.2212 274.6367 C
113.2212 275.3394 113.2212 276.042 113.2212 276.7549 c
113.2212 277.457 113.2212 278.1597 113.2212 278.8726 C
113.2212 278.8726 L
f
0 g
108.4038 264.5195 m
109.0864 264.5195 109.7886 264.5195 110.4912 264.5195 c
111.1943 264.5195 111.9067 264.5195 112.6089 264.5195 C
112.6089 263.8169 112.6089 263.104 112.6089 262.4014 c
112.6089 261.6992 112.6089 260.9863 112.6089 260.2837 C
111.9067 260.2837 111.1943 260.2837 110.4912 260.2837 c
109.7886 260.2837 109.0864 260.2837 108.4038 260.2837 C
108.4038 260.9863 108.4038 261.6992 108.4038 262.4014 c
108.4038 263.104 108.4038 263.8169 108.4038 264.5195 C
108.4038 264.5195 L
f
0 g
108.4038 269.3169 m
109.0864 269.3169 109.7886 269.3169 110.5015 269.3169 c
111.2241 269.3169 111.937 269.3169 112.6392 269.3169 C
112.6392 268.6045 112.6392 267.8921 112.6392 267.1792 c
112.6392 266.4668 112.6392 265.7539 112.6392 265.0513 C
111.937 265.0513 111.2241 265.0513 110.5015 265.0513 c
109.7886 265.0513 109.0864 265.0513 108.4038 265.0513 C
108.4038 265.7539 108.4038 266.4668 108.4038 267.1792 c
108.4038 267.8921 108.4038 268.6045 108.4038 269.3169 C
108.4038 269.3169 L
f
0 g
108.4038 274.0747 m
109.0864 274.0747 109.7886 274.0747 110.5015 274.0747 c
111.2241 274.0747 111.937 274.0747 112.6392 274.0747 C
112.6392 273.3721 112.6392 272.6694 112.6392 271.957 c
112.6392 271.2544 112.6392 270.5518 112.6392 269.8389 C
111.937 269.8389 111.2241 269.8389 110.5015 269.8389 c
109.7886 269.8389 109.0864 269.8389 108.4038 269.8389 C
108.4038 270.5518 108.4038 271.2544 108.4038 271.957 c
108.4038 272.6694 108.4038 273.3721 108.4038 274.0747 C
108.4038 274.0747 L
f
108.4038 278.8726 m
109.0864 278.8726 109.7886 278.8726 110.5015 278.8726 c
111.2241 278.8726 111.937 278.8726 112.6392 278.8726 C
112.6392 278.1597 112.6392 277.457 112.6392 276.7549 c
112.6392 276.042 112.6392 275.3394 112.6392 274.6367 C
111.937 274.6367 111.2241 274.6367 110.5015 274.6367 c
109.7886 274.6367 109.0864 274.6367 108.4038 274.6367 C
108.4038 275.3394 108.4038 276.042 108.4038 276.7549 c
108.4038 277.457 108.4038 278.1597 108.4038 278.8726 C
Bb
1 (Unnamed gradient) 120.1675 286.5513 -90 29.8115 1 0 0 1 0 0 Bg
-0.000001 -29.8115 -27.5269 0.000001 133.9307 286.5513 Xm
-0.000354 -8099.7764 -27.5269 0.000001 133.9312 8386.3271 Bc
-0.000001 -29.8115 -27.5269 0.000001 133.9307 286.5513 Bm
-0.000354 -8099.7764 -27.5269 0.000001 133.9307 256.7397 Bc
f
0 BB
*U
*u
0 g
137.4507 278.9023 m
138.1333 278.9023 138.8359 278.9023 139.5586 278.9023 c
140.2715 278.9023 140.9839 278.9023 141.6865 278.9023 C
141.6865 278.1699 141.6865 277.457 141.6865 276.7549 c
141.6865 276.042 141.6865 275.3394 141.6865 274.6367 C
140.9839 274.6367 140.2715 274.6367 139.5586 274.6367 c
138.8359 274.6367 138.1333 274.6367 137.4507 274.6367 C
137.4507 275.3394 137.4507 276.042 137.4507 276.7549 c
137.4507 277.457 137.4507 278.1699 137.4507 278.9023 C
137.4507 278.9023 L
f
0 g
156.7422 264.5195 m
157.4448 264.5195 158.1572 264.5195 158.8701 264.5195 c
159.5923 264.5195 160.2954 264.5195 161.0078 264.5195 C
161.0078 263.8169 161.0078 263.104 161.0078 262.4014 c
161.0078 261.6992 161.0078 260.9863 161.0078 260.2837 C
160.2954 260.2837 159.5923 260.2837 158.8701 260.2837 c
158.1572 260.2837 157.4448 260.2837 156.7422 260.2837 C
156.7422 260.9863 156.7422 261.6992 156.7422 262.4014 c
156.7422 263.104 156.7422 263.8169 156.7422 264.5195 C
156.7422 264.5195 L
f
0 g
156.7422 283.6602 m
157.4448 283.6602 158.1572 283.6602 158.8701 283.6602 c
159.5923 283.6602 160.2954 283.6602 161.0078 283.6602 C
161.0078 282.9575 161.0078 282.2549 161.0078 281.5425 c
161.0078 280.8398 161.0078 280.1372 161.0078 279.4243 C
160.2954 279.4243 159.5923 279.4243 158.8701 279.4243 c
158.1572 279.4243 157.4448 279.4243 156.7422 279.4243 C
156.7422 280.1372 156.7422 280.8398 156.7422 281.5425 c
156.7422 282.2549 156.7422 282.9575 156.7422 283.6602 C
156.7422 283.6602 L
f
0 g
151.9141 264.5195 m
152.6265 264.5195 153.3296 264.5195 154.0322 264.5195 c
154.7446 264.5195 155.4473 264.5195 156.1499 264.5195 C
156.1499 263.8169 156.1499 263.104 156.1499 262.4014 c
156.1499 261.6992 156.1499 260.9863 156.1499 260.2837 C
155.4473 260.2837 154.7446 260.2837 154.0322 260.2837 c
153.3296 260.2837 152.6265 260.2837 151.9141 260.2837 C
151.9141 260.9863 151.9141 261.6992 151.9141 262.4014 c
151.9141 263.104 151.9141 263.8169 151.9141 264.5195 C
151.9141 264.5195 L
f
0 g
151.9141 283.6602 m
152.6265 283.6602 153.3296 283.6602 154.0322 283.6602 c
154.7446 283.6602 155.4473 283.6602 156.1499 283.6602 C
156.1499 282.9575 156.1499 282.2549 156.1499 281.5425 c
156.1499 280.8398 156.1499 280.1372 156.1499 279.4243 C
155.4473 279.4243 154.7446 279.4243 154.0322 279.4243 c
153.3296 279.4243 152.6265 279.4243 151.9141 279.4243 C
151.9141 280.1372 151.9141 280.8398 151.9141 281.5425 c
151.9141 282.2549 151.9141 282.9575 151.9141 283.6602 C
151.9141 283.6602 L
f
0 g
147.0962 264.5195 m
147.7988 264.5195 148.5117 264.5195 149.2144 264.5195 c
149.917 264.5195 150.6294 264.5195 151.332 264.5195 C
151.332 263.8169 151.332 263.104 151.332 262.4014 c
151.332 261.6992 151.332 260.9863 151.332 260.2837 C
150.6294 260.2837 149.917 260.2837 149.2144 260.2837 c
148.5117 260.2837 147.7988 260.2837 147.0962 260.2837 C
147.0962 260.9863 147.0962 261.6992 147.0962 262.4014 c
147.0962 263.104 147.0962 263.8169 147.0962 264.5195 C
147.0962 264.5195 L
f
0 g
147.0962 274.105 m
147.7988 274.105 148.5117 274.105 149.2144 274.105 c
149.917 274.105 150.6294 274.105 151.332 274.105 C
151.332 273.4023 151.332 272.6895 151.332 271.9873 c
151.332 271.2842 151.332 270.5815 151.332 269.8691 C
150.6294 269.8691 149.917 269.8691 149.2144 269.8691 c
148.5117 269.8691 147.7988 269.8691 147.0962 269.8691 C
147.0962 270.5815 147.0962 271.2842 147.0962 271.9873 c
147.0962 272.6895 147.0962 273.4023 147.0962 274.105 C
147.0962 274.105 L
f
0 g
147.0962 283.6602 m
147.7988 283.6602 148.5117 283.6602 149.2144 283.6602 c
149.917 283.6602 150.6294 283.6602 151.332 283.6602 C
151.332 282.9575 151.332 282.2549 151.332 281.5425 c
151.332 280.8398 151.332 280.1372 151.332 279.4243 C
150.6294 279.4243 149.917 279.4243 149.2144 279.4243 c
148.5117 279.4243 147.7988 279.4243 147.0962 279.4243 C
147.0962 280.1372 147.0962 280.8398 147.0962 281.5425 c
147.0962 282.2549 147.0962 282.9575 147.0962 283.6602 C
147.0962 283.6602 L
f
0 g
142.2783 264.5195 m
142.9814 264.5195 143.6836 264.5195 144.3862 264.5195 c
145.0991 264.5195 145.8018 264.5195 146.5039 264.5195 C
146.5039 263.8169 146.5039 263.104 146.5039 262.4014 c
146.5039 261.6992 146.5039 260.9863 146.5039 260.2837 C
145.8018 260.2837 145.0991 260.2837 144.3862 260.2837 c
143.6836 260.2837 142.9814 260.2837 142.2783 260.2837 C
142.2783 260.9863 142.2783 261.6992 142.2783 262.4014 c
142.2783 263.104 142.2783 263.8169 142.2783 264.5195 C
142.2783 264.5195 L
f
0 g
142.2783 274.105 m
142.9814 274.105 143.6836 274.105 144.3862 274.105 c
145.0991 274.105 145.8018 274.105 146.5039 274.105 C
146.5039 273.4023 146.5039 272.6895 146.5039 271.9873 c
146.5039 271.2842 146.5039 270.5815 146.5039 269.8691 C
145.8018 269.8691 145.0991 269.8691 144.3862 269.8691 c
143.6836 269.8691 142.9814 269.8691 142.2783 269.8691 C
142.2783 270.5815 142.2783 271.2842 142.2783 271.9873 c
142.2783 272.6895 142.2783 273.4023 142.2783 274.105 C
142.2783 274.105 L
f
0 g
142.2783 283.6602 m
142.9814 283.6602 143.6836 283.6602 144.3862 283.6602 c
145.0991 283.6602 145.8018 283.6602 146.5039 283.6602 C
146.5039 282.9575 146.5039 282.2549 146.5039 281.5425 c
146.5039 280.8398 146.5039 280.1372 146.5039 279.4243 C
145.8018 279.4243 145.0991 279.4243 144.3862 279.4243 c
143.6836 279.4243 142.9814 279.4243 142.2783 279.4243 C
142.2783 280.1372 142.2783 280.8398 142.2783 281.5425 c
142.2783 282.2549 142.2783 282.9575 142.2783 283.6602 C
142.2783 283.6602 L
f
0 g
137.4507 269.3169 m
138.1333 269.3169 138.8359 269.3169 139.5586 269.3169 c
140.2715 269.3169 140.9839 269.3169 141.6865 269.3169 C
141.6865 268.6045 141.6865 267.9019 141.6865 267.1992 c
141.6865 266.4868 141.6865 265.7842 141.6865 265.0815 C
140.9839 265.0815 140.2715 265.0815 139.5586 265.0815 c
138.8359 265.0815 138.1333 265.0815 137.4507 265.0815 C
137.4507 265.7842 137.4507 266.4868 137.4507 267.1992 c
137.4507 267.9019 137.4507 268.6045 137.4507 269.3169 C
137.4507 269.3169 L
f
137.4507 274.105 m
138.1333 274.105 138.8359 274.105 139.5586 274.105 c
140.2715 274.105 140.9839 274.105 141.6865 274.105 C
141.6865 273.4023 141.6865 272.6895 141.6865 271.9873 c
141.6865 271.2842 141.6865 270.5815 141.6865 269.8691 C
140.9839 269.8691 140.2715 269.8691 139.5586 269.8691 c
138.8359 269.8691 138.1333 269.8691 137.4507 269.8691 C
137.4507 270.5815 137.4507 271.2842 137.4507 271.9873 c
137.4507 272.6895 137.4507 273.4023 137.4507 274.105 C
Bb
1 (Unnamed gradient) 149.229 286.5513 -90 29.8115 1 0 0 1 0 0 Bg
-0.000001 -29.8115 -27.5571 0.000001 163.0078 286.5513 Xm
-0.000355 -8128.8384 -27.5571 0.000001 163.0083 8415.3896 Bc
-0.000001 -29.8115 -27.5571 0.000001 163.0078 286.5513 Bm
-0.000355 -8128.8384 -27.5571 0.000001 163.0078 256.7397 Bc
f
0 BB
*U
*u
0 g
166.3271 283.7202 m
167.0098 283.7202 167.7124 283.7202 168.4248 283.7202 c
169.1479 283.7202 169.8604 283.7202 170.563 283.7202 C
170.563 283.0176 170.563 282.3052 170.563 281.5928 c
170.563 280.8696 170.563 280.1675 170.563 279.4546 C
169.8604 279.4546 169.1479 279.4546 168.4248 279.4546 c
167.7124 279.4546 167.0098 279.4546 166.3271 279.4546 C
166.3271 280.1675 166.3271 280.8696 166.3271 281.5928 c
166.3271 282.3052 166.3271 283.0176 166.3271 283.7202 C
166.3271 283.7202 L
f
0 g
185.6187 264.5796 m
186.3213 264.5796 187.0337 264.5796 187.7363 264.5796 c
188.439 264.5796 189.1519 264.5796 189.8843 264.5796 C
189.8843 263.877 189.8843 263.1646 189.8843 262.4619 c
189.8843 261.7593 189.8843 261.0464 189.8843 260.3442 C
189.1519 260.3442 188.439 260.3442 187.7363 260.3442 c
187.0337 260.3442 186.3213 260.3442 185.6187 260.3442 C
185.6187 261.0464 185.6187 261.7593 185.6187 262.4619 c
185.6187 263.1646 185.6187 263.877 185.6187 264.5796 C
185.6187 264.5796 L
f
0 g
185.6187 269.3672 m
186.3213 269.3672 187.0337 269.3672 187.7466 269.3672 c
188.4692 269.3672 189.1719 269.3672 189.8843 269.3672 C
189.8843 268.6646 189.8843 267.9624 189.8843 267.2593 c
189.8843 266.5469 189.8843 265.8442 189.8843 265.1416 C
189.1719 265.1416 188.4692 265.1416 187.7466 265.1416 c
187.0337 265.1416 186.3213 265.1416 185.6187 265.1416 C
185.6187 265.8442 185.6187 266.5469 185.6187 267.2593 c
185.6187 267.9624 185.6187 268.6646 185.6187 269.3672 C
185.6187 269.3672 L
f
0 g
185.6187 274.1348 m
186.3213 274.1348 187.0337 274.1348 187.7466 274.1348 c
188.4692 274.1348 189.1719 274.1348 189.8843 274.1348 C
189.8843 273.4321 189.8843 272.7197 189.8843 272.0171 c
189.8843 271.3145 189.8843 270.6016 189.8843 269.8994 C
189.1719 269.8994 188.4692 269.8994 187.7466 269.8994 c
187.0337 269.8994 186.3213 269.8994 185.6187 269.8994 C
185.6187 270.6016 185.6187 271.3145 185.6187 272.0171 c
185.6187 272.7197 185.6187 273.4321 185.6187 274.1348 C
185.6187 274.1348 L
f
0 g
185.6187 278.9326 m
186.3213 278.9326 187.0337 278.9326 187.7466 278.9326 c
188.4692 278.9326 189.1719 278.9326 189.8843 278.9326 C
189.8843 278.2197 189.8843 277.5176 189.8843 276.8149 c
189.8843 276.1021 189.8843 275.3994 189.8843 274.6968 C
189.1719 274.6968 188.4692 274.6968 187.7466 274.6968 c
187.0337 274.6968 186.3213 274.6968 185.6187 274.6968 C
185.6187 275.3994 185.6187 276.1021 185.6187 276.8149 c
185.6187 277.5176 185.6187 278.2197 185.6187 278.9326 C
185.6187 278.9326 L
f
0 g
185.6187 283.7202 m
186.3213 283.7202 187.0337 283.7202 187.7363 283.7202 c
188.439 283.7202 189.1519 283.7202 189.8843 283.7202 C
189.8843 283.0176 189.8843 282.3052 189.8843 281.5928 c
189.8843 280.8696 189.8843 280.1675 189.8843 279.4546 C
189.1519 279.4546 188.439 279.4546 187.7363 279.4546 c
187.0337 279.4546 186.3213 279.4546 185.6187 279.4546 C
185.6187 280.1675 185.6187 280.8696 185.6187 281.5928 c
185.6187 282.3052 185.6187 283.0176 185.6187 283.7202 C
185.6187 283.7202 L
f
0 g
180.791 269.3672 m
181.5034 269.3672 182.2061 269.3672 182.9087 269.3672 c
183.6211 269.3672 184.3237 269.3672 185.0264 269.3672 C
185.0264 268.6646 185.0264 267.9624 185.0264 267.2593 c
185.0264 266.5469 185.0264 265.8442 185.0264 265.1416 C
184.3237 265.1416 183.6211 265.1416 182.9087 265.1416 c
182.2061 265.1416 181.5034 265.1416 180.791 265.1416 C
180.791 265.8442 180.791 266.5469 180.791 267.2593 c
180.791 267.9624 180.791 268.6646 180.791 269.3672 C
180.791 269.3672 L
f
0 g
175.9731 274.1348 m
176.6753 274.1348 177.3882 274.1348 178.0908 274.1348 c
178.7935 274.1348 179.5059 274.1348 180.2085 274.1348 C
180.2085 273.4321 180.2085 272.7197 180.2085 272.0171 c
180.2085 271.3145 180.2085 270.6016 180.2085 269.8994 C
179.5059 269.8994 178.7935 269.8994 178.0908 269.8994 c
177.3882 269.8994 176.6753 269.8994 175.9731 269.8994 C
175.9731 270.6016 175.9731 271.3145 175.9731 272.0171 c
175.9731 272.7197 175.9731 273.4321 175.9731 274.1348 C
175.9731 274.1348 L
f
0 g
171.145 269.3672 m
171.8579 269.3672 172.5605 269.3672 173.2627 269.3672 c
173.9756 269.3672 174.6782 269.3672 175.3809 269.3672 C
175.3809 268.6646 175.3809 267.9624 175.3809 267.2593 c
175.3809 266.5469 175.3809 265.8442 175.3809 265.1416 C
174.6782 265.1416 173.9756 265.1416 173.2627 265.1416 c
172.5605 265.1416 171.8579 265.1416 171.145 265.1416 C
171.145 265.8442 171.145 266.5469 171.145 267.2593 c
171.145 267.9624 171.145 268.6646 171.145 269.3672 C
171.145 269.3672 L
f
0 g
166.3271 264.5796 m
167.0098 264.5796 167.7124 264.5796 168.4248 264.5796 c
169.1479 264.5796 169.8604 264.5796 170.563 264.5796 C
170.563 263.877 170.563 263.1646 170.563 262.4619 c
170.563 261.7593 170.563 261.0464 170.563 260.3442 C
169.8604 260.3442 169.1479 260.3442 168.4248 260.3442 c
167.7124 260.3442 167.0098 260.3442 166.3271 260.3442 C
166.3271 261.0464 166.3271 261.7593 166.3271 262.4619 c
166.3271 263.1646 166.3271 263.877 166.3271 264.5796 C
166.3271 264.5796 L
f
0 g
166.3271 269.3672 m
167.0303 269.3672 167.7427 269.3672 168.4453 269.3672 c
169.1479 269.3672 169.8604 269.3672 170.563 269.3672 C
170.563 268.6646 170.563 267.9624 170.563 267.2593 c
170.563 266.5469 170.563 265.8442 170.563 265.1416 C
169.8604 265.1416 169.1479 265.1416 168.4453 265.1416 c
167.7427 265.1416 167.0303 265.1416 166.3271 265.1416 C
166.3271 265.8442 166.3271 266.5469 166.3271 267.2593 c
166.3271 267.9624 166.3271 268.6646 166.3271 269.3672 C
166.3271 269.3672 L
f
0 g
166.3271 274.1348 m
167.0303 274.1348 167.7427 274.1348 168.4453 274.1348 c
169.1479 274.1348 169.8604 274.1348 170.563 274.1348 C
170.563 273.4321 170.563 272.7197 170.563 272.0171 c
170.563 271.3145 170.563 270.6016 170.563 269.8994 C
169.8604 269.8994 169.1479 269.8994 168.4453 269.8994 c
167.7427 269.8994 167.0303 269.8994 166.3271 269.8994 C
166.3271 270.6016 166.3271 271.3145 166.3271 272.0171 c
166.3271 272.7197 166.3271 273.4321 166.3271 274.1348 C
166.3271 274.1348 L
f
166.3271 278.9326 m
167.0303 278.9326 167.7427 278.9326 168.4453 278.9326 c
169.1479 278.9326 169.8604 278.9326 170.563 278.9326 C
170.563 278.2197 170.563 277.5176 170.563 276.8149 c
170.563 276.1021 170.563 275.3994 170.563 274.6968 C
169.8604 274.6968 169.1479 274.6968 168.4453 274.6968 c
167.7427 274.6968 167.0303 274.6968 166.3271 274.6968 C
166.3271 275.3994 166.3271 276.1021 166.3271 276.8149 c
166.3271 277.5176 166.3271 278.2197 166.3271 278.9326 C
Bb
1 (Unnamed gradient) 178.106 286.5513 -90 29.8116 1 0 0 1 0 0 Bg
-0.000001 -29.8116 -27.5571 0.000001 191.8843 286.5513 Xm
-0.000357 -8157.7744 -27.5571 0.000001 191.8848 8444.3262 Bc
-0.000001 -29.8116 -27.5571 0.000001 191.8843 286.5513 Bm
-0.000357 -8157.7744 -27.5571 0.000001 191.8843 256.7397 Bc
f
0 BB
*U
*u
0 g
206.9976 278.9023 m
207.6802 278.9023 208.3823 278.9023 209.0952 278.9023 c
209.8179 278.9023 210.5308 278.9023 211.2329 278.9023 C
211.2329 278.1699 211.2329 277.457 211.2329 276.7549 c
211.2329 276.042 211.2329 275.3394 211.2329 274.6367 C
210.5308 274.6367 209.8179 274.6367 209.0952 274.6367 c
208.3823 274.6367 207.6802 274.6367 206.9976 274.6367 C
206.9976 275.3394 206.9976 276.042 206.9976 276.7549 c
206.9976 277.457 206.9976 278.1699 206.9976 278.9023 C
206.9976 278.9023 L
f
0 g
226.2891 264.5493 m
226.9912 264.5493 227.7041 264.5493 228.417 264.5493 c
229.1387 264.5493 229.8418 264.5493 230.5547 264.5493 C
230.5547 263.8267 230.5547 263.104 230.5547 262.4014 c
230.5547 261.6992 230.5547 260.9863 230.5547 260.2837 C
229.8418 260.2837 229.1387 260.2837 228.417 260.2837 c
227.7041 260.2837 226.9912 260.2837 226.2891 260.2837 C
226.2891 260.9863 226.2891 261.6992 226.2891 262.4014 c
226.2891 263.104 226.2891 263.8267 226.2891 264.5493 C
226.2891 264.5493 L
f
0 g
226.2891 269.3169 m
226.9912 269.3169 227.7041 269.3169 228.417 269.3169 c
229.1387 269.3169 229.8418 269.3169 230.5547 269.3169 C
230.5547 268.6045 230.5547 267.9019 230.5547 267.1992 c
230.5547 266.4868 230.5547 265.7842 230.5547 265.0815 C
229.8418 265.0815 229.1387 265.0815 228.417 265.0815 c
227.7041 265.0815 226.9912 265.0815 226.2891 265.0815 C
226.2891 265.7842 226.2891 266.4868 226.2891 267.1992 c
226.2891 267.9019 226.2891 268.6045 226.2891 269.3169 C
226.2891 269.3169 L
f
0 g
226.2891 274.105 m
226.9912 274.105 227.7041 274.105 228.417 274.105 c
229.1387 274.105 229.8418 274.105 230.5547 274.105 C
230.5547 273.4023 230.5547 272.6895 230.5547 271.9873 c
230.5547 271.2842 230.5547 270.5815 230.5547 269.8691 C
229.8418 269.8691 229.1387 269.8691 228.417 269.8691 c
227.7041 269.8691 226.9912 269.8691 226.2891 269.8691 C
226.2891 270.5815 226.2891 271.2842 226.2891 271.9873 c
226.2891 272.6895 226.2891 273.4023 226.2891 274.105 C
226.2891 274.105 L
f
0 g
226.2891 283.6602 m
226.9912 283.6602 227.7041 283.6602 228.417 283.6602 c
229.1387 283.6602 229.8418 283.6602 230.5547 283.6602 C
230.5547 282.9575 230.5547 282.2549 230.5547 281.5425 c
230.5547 280.8398 230.5547 280.1372 230.5547 279.4243 C
229.8418 279.4243 229.1387 279.4243 228.417 279.4243 c
227.7041 279.4243 226.9912 279.4243 226.2891 279.4243 C
226.2891 280.1372 226.2891 280.8398 226.2891 281.5425 c
226.2891 282.2549 226.2891 282.9575 226.2891 283.6602 C
226.2891 283.6602 L
f
0 g
221.4609 264.5493 m
222.1738 264.5493 222.876 264.5493 223.5791 264.5493 c
224.291 264.5493 224.9941 264.5493 225.6963 264.5493 C
225.6963 263.8267 225.6963 263.104 225.6963 262.4014 c
225.6963 261.6992 225.6963 260.9863 225.6963 260.2837 C
224.9941 260.2837 224.291 260.2837 223.5791 260.2837 c
222.876 260.2837 222.1738 260.2837 221.4609 260.2837 C
221.4609 260.9863 221.4609 261.6992 221.4609 262.4014 c
221.4609 263.104 221.4609 263.8267 221.4609 264.5493 C
221.4609 264.5493 L
f
0 g
221.4609 274.105 m
222.1738 274.105 222.876 274.105 223.5791 274.105 c
224.291 274.105 224.9941 274.105 225.6963 274.105 C
225.6963 273.4023 225.6963 272.6895 225.6963 271.9873 c
225.6963 271.2842 225.6963 270.5815 225.6963 269.8691 C
224.9941 269.8691 224.291 269.8691 223.5791 269.8691 c
222.876 269.8691 222.1738 269.8691 221.4609 269.8691 C
221.4609 270.5815 221.4609 271.2842 221.4609 271.9873 c
221.4609 272.6895 221.4609 273.4023 221.4609 274.105 C
221.4609 274.105 L
f
0 g
221.4609 283.6602 m
222.1738 283.6602 222.876 283.6602 223.5791 283.6602 c
224.291 283.6602 224.9941 283.6602 225.6963 283.6602 C
225.6963 282.9575 225.6963 282.2549 225.6963 281.5425 c
225.6963 280.8398 225.6963 280.1372 225.6963 279.4243 C
224.9941 279.4243 224.291 279.4243 223.5791 279.4243 c
222.876 279.4243 222.1738 279.4243 221.4609 279.4243 C
221.4609 280.1372 221.4609 280.8398 221.4609 281.5425 c
221.4609 282.2549 221.4609 282.9575 221.4609 283.6602 C
221.4609 283.6602 L
f
0 g
216.6436 264.5493 m
217.3457 264.5493 218.0586 264.5493 218.7607 264.5493 c
219.4639 264.5493 220.1758 264.5493 220.8789 264.5493 C
220.8789 263.8267 220.8789 263.104 220.8789 262.4014 c
220.8789 261.6992 220.8789 260.9863 220.8789 260.2837 C
220.1758 260.2837 219.4639 260.2837 218.7607 260.2837 c
218.0586 260.2837 217.3457 260.2837 216.6436 260.2837 C
216.6436 260.9863 216.6436 261.6992 216.6436 262.4014 c
216.6436 263.104 216.6436 263.8267 216.6436 264.5493 C
216.6436 264.5493 L
f
0 g
216.6436 274.105 m
217.3457 274.105 218.0586 274.105 218.7607 274.105 c
219.4639 274.105 220.1758 274.105 220.8789 274.105 C
220.8789 273.4023 220.8789 272.6895 220.8789 271.9873 c
220.8789 271.2842 220.8789 270.5815 220.8789 269.8691 C
220.1758 269.8691 219.4639 269.8691 218.7607 269.8691 c
218.0586 269.8691 217.3457 269.8691 216.6436 269.8691 C
216.6436 270.5815 216.6436 271.2842 216.6436 271.9873 c
216.6436 272.6895 216.6436 273.4023 216.6436 274.105 C
216.6436 274.105 L
f
0 g
216.6436 283.6602 m
217.3457 283.6602 218.0586 283.6602 218.7607 283.6602 c
219.4639 283.6602 220.1758 283.6602 220.8789 283.6602 C
220.8789 282.9575 220.8789 282.2549 220.8789 281.5425 c
220.8789 280.8398 220.8789 280.1372 220.8789 279.4243 C
220.1758 279.4243 219.4639 279.4243 218.7607 279.4243 c
218.0586 279.4243 217.3457 279.4243 216.6436 279.4243 C
216.6436 280.1372 216.6436 280.8398 216.6436 281.5425 c
216.6436 282.2549 216.6436 282.9575 216.6436 283.6602 C
216.6436 283.6602 L
f
0 g
211.8154 264.5493 m
212.5273 264.5493 213.2305 264.5493 213.9326 264.5493 c
214.6455 264.5493 215.3486 264.5493 216.0508 264.5493 C
216.0508 263.8267 216.0508 263.104 216.0508 262.4014 c
216.0508 261.6992 216.0508 260.9863 216.0508 260.2837 C
215.3486 260.2837 214.6455 260.2837 213.9326 260.2837 c
213.2305 260.2837 212.5273 260.2837 211.8154 260.2837 C
211.8154 260.9863 211.8154 261.6992 211.8154 262.4014 c
211.8154 263.104 211.8154 263.8267 211.8154 264.5493 C
211.8154 264.5493 L
f
0 g
211.8154 283.6602 m
212.5273 283.6602 213.2305 283.6602 213.9326 283.6602 c
214.6455 283.6602 215.3486 283.6602 216.0508 283.6602 C
216.0508 282.9575 216.0508 282.2549 216.0508 281.5425 c
216.0508 280.8398 216.0508 280.1372 216.0508 279.4243 C
215.3486 279.4243 214.6455 279.4243 213.9326 279.4243 c
213.2305 279.4243 212.5273 279.4243 211.8154 279.4243 C
211.8154 280.1372 211.8154 280.8398 211.8154 281.5425 c
211.8154 282.2549 211.8154 282.9575 211.8154 283.6602 C
211.8154 283.6602 L
f
0 g
206.9976 269.3169 m
207.6802 269.3169 208.3823 269.3169 209.0952 269.3169 c
209.8179 269.3169 210.5308 269.3169 211.2329 269.3169 C
211.2329 268.6045 211.2329 267.9019 211.2329 267.1992 c
211.2329 266.4868 211.2329 265.7842 211.2329 265.0815 C
210.5308 265.0815 209.8179 265.0815 209.0952 265.0815 c
208.3823 265.0815 207.6802 265.0815 206.9976 265.0815 C
206.9976 265.7842 206.9976 266.4868 206.9976 267.1992 c
206.9976 267.9019 206.9976 268.6045 206.9976 269.3169 C
206.9976 269.3169 L
f
206.9976 274.105 m
207.6802 274.105 208.3823 274.105 209.0952 274.105 c
209.8179 274.105 210.5308 274.105 211.2329 274.105 C
211.2329 273.4023 211.2329 272.6895 211.2329 271.9873 c
211.2329 271.2842 211.2329 270.5815 211.2329 269.8691 C
210.5308 269.8691 209.8179 269.8691 209.0952 269.8691 c
208.3823 269.8691 207.6802 269.8691 206.9976 269.8691 C
206.9976 270.5815 206.9976 271.2842 206.9976 271.9873 c
206.9976 272.6895 206.9976 273.4023 206.9976 274.105 C
Bb
1 (Unnamed gradient) 218.7764 286.5513 -90 29.8115 1 0 0 1 0 0 Bg
-0.000001 -29.8115 -27.5571 0.000001 232.5547 286.5513 Xm
-0.000358 -8198.3848 -27.5571 0.000001 232.5547 8484.9365 Bc
-0.000001 -29.8115 -27.5571 0.000001 232.5547 286.5513 Bm
-0.000358 -8198.3848 -27.5571 0.000001 232.5547 256.7397 Bc
f
0 BB
*U
*u
0 g
235.8135 278.9023 m
236.5166 278.9023 237.2188 278.9023 237.9316 278.9023 c
238.6338 278.9023 239.3369 278.9023 240.0498 278.9023 C
240.0498 278.1899 240.0498 277.4873 240.0498 276.7646 c
240.0498 276.0518 240.0498 275.3394 240.0498 274.6367 C
239.3369 274.6367 238.6338 274.6367 237.9316 274.6367 c
237.2188 274.6367 236.5166 274.6367 235.8135 274.6367 C
235.8135 275.3394 235.8135 276.0518 235.8135 276.7646 c
235.8135 277.4873 235.8135 278.1899 235.8135 278.9023 C
235.8135 278.9023 L
f
0 g
255.1348 264.5493 m
259.3711 264.5493 L
259.3711 260.2837 L
255.1348 260.2837 L
255.1348 264.5493 L
255.1348 264.5493 L
f
0 g
255.1348 269.3472 m
255.8379 269.3472 256.54 269.3472 257.2529 269.3472 c
257.9561 269.3472 258.6582 269.3472 259.3711 269.3472 C
259.3711 268.6143 259.3711 267.9019 259.3711 267.1992 c
259.3711 266.4868 259.3711 265.7842 259.3711 265.0815 C
258.6582 265.0815 257.9561 265.0815 257.2529 265.0815 c
256.54 265.0815 255.8379 265.0815 255.1348 265.0815 C
255.1348 265.7842 255.1348 266.4868 255.1348 267.1992 c
255.1348 267.9019 255.1348 268.6143 255.1348 269.3472 C
255.1348 269.3472 L
f
0 g
255.1348 274.105 m
255.8379 274.105 256.54 274.105 257.2529 274.105 c
257.9561 274.105 258.6582 274.105 259.3711 274.105 C
259.3711 273.4023 259.3711 272.6895 259.3711 271.9873 c
259.3711 271.2842 259.3711 270.5815 259.3711 269.8691 C
258.6582 269.8691 257.9561 269.8691 257.2529 269.8691 c
256.54 269.8691 255.8379 269.8691 255.1348 269.8691 C
255.1348 270.5815 255.1348 271.2842 255.1348 271.9873 c
255.1348 272.6895 255.1348 273.4023 255.1348 274.105 C
255.1348 274.105 L
f
0 g
255.1348 278.9023 m
255.8379 278.9023 256.54 278.9023 257.2529 278.9023 c
257.9561 278.9023 258.6582 278.9023 259.3711 278.9023 C
259.3711 278.1899 259.3711 277.4873 259.3711 276.7646 c
259.3711 276.0518 259.3711 275.3394 259.3711 274.6367 C
258.6582 274.6367 257.9561 274.6367 257.2529 274.6367 c
256.54 274.6367 255.8379 274.6367 255.1348 274.6367 C
255.1348 275.3394 255.1348 276.0518 255.1348 276.7646 c
255.1348 277.4873 255.1348 278.1899 255.1348 278.9023 C
255.1348 278.9023 L
f
0 g
250.3066 274.105 m
251.0195 274.105 251.7227 274.105 252.4248 274.105 c
253.1279 274.105 253.8398 274.105 254.543 274.105 C
254.543 273.4023 254.543 272.6895 254.543 271.9873 c
254.543 271.2842 254.543 270.5815 254.543 269.8691 C
253.8398 269.8691 253.1279 269.8691 252.4248 269.8691 c
251.7227 269.8691 251.0195 269.8691 250.3066 269.8691 C
250.3066 270.5815 250.3066 271.2842 250.3066 271.9873 c
250.3066 272.6895 250.3066 273.4023 250.3066 274.105 C
250.3066 274.105 L
f
0 g
250.3066 283.6904 m
251.0195 283.6904 251.7227 283.6904 252.4248 283.6904 c
253.1279 283.6904 253.8398 283.6904 254.543 283.6904 C
254.543 282.9678 254.543 282.2549 254.543 281.5425 c
254.543 280.8398 254.543 280.1372 254.543 279.4243 C
253.8398 279.4243 253.1279 279.4243 252.4248 279.4243 c
251.7227 279.4243 251.0195 279.4243 250.3066 279.4243 C
250.3066 280.1372 250.3066 280.8398 250.3066 281.5425 c
250.3066 282.2549 250.3066 282.9678 250.3066 283.6904 C
250.3066 283.6904 L
f
0 g
245.4893 274.105 m
246.1924 274.105 246.8945 274.105 247.6074 274.105 c
248.3096 274.105 249.0127 274.105 249.7256 274.105 C
249.7256 273.4023 249.7256 272.6895 249.7256 271.9873 c
249.7256 271.2842 249.7256 270.5815 249.7256 269.8691 C
249.0127 269.8691 248.3096 269.8691 247.6074 269.8691 c
246.8945 269.8691 246.1924 269.8691 245.4893 269.8691 C
245.4893 270.5815 245.4893 271.2842 245.4893 271.9873 c
245.4893 272.6895 245.4893 273.4023 245.4893 274.105 C
245.4893 274.105 L
f
0 g
245.4893 283.6904 m
246.1924 283.6904 246.8945 283.6904 247.6074 283.6904 c
248.3096 283.6904 249.0127 283.6904 249.7256 283.6904 C
249.7256 282.9678 249.7256 282.2549 249.7256 281.5425 c
249.7256 280.8398 249.7256 280.1372 249.7256 279.4243 C
249.0127 279.4243 248.3096 279.4243 247.6074 279.4243 c
246.8945 279.4243 246.1924 279.4243 245.4893 279.4243 C
245.4893 280.1372 245.4893 280.8398 245.4893 281.5425 c
245.4893 282.2549 245.4893 282.9678 245.4893 283.6904 C
245.4893 283.6904 L
f
0 g
240.6318 274.105 m
241.3447 274.105 242.0469 274.105 242.7695 274.105 c
243.4824 274.105 244.1943 274.105 244.8975 274.105 C
244.8975 273.4023 244.8975 272.6895 244.8975 271.9873 c
244.8975 271.2842 244.8975 270.5815 244.8975 269.8691 C
244.1943 269.8691 243.4824 269.8691 242.7695 269.8691 c
242.0469 269.8691 241.3447 269.8691 240.6318 269.8691 C
240.6318 270.5815 240.6318 271.2842 240.6318 271.9873 c
240.6318 272.6895 240.6318 273.4023 240.6318 274.105 C
240.6318 274.105 L
f
0 g
240.6318 283.6904 m
241.3447 283.6904 242.0469 283.6904 242.7695 283.6904 c
243.4824 283.6904 244.1943 283.6904 244.8975 283.6904 C
244.8975 282.9678 244.8975 282.2549 244.8975 281.5425 c
244.8975 280.8398 244.8975 280.1372 244.8975 279.4243 C
244.1943 279.4243 243.4824 279.4243 242.7695 279.4243 c
242.0469 279.4243 241.3447 279.4243 240.6318 279.4243 C
240.6318 280.1372 240.6318 280.8398 240.6318 281.5425 c
240.6318 282.2549 240.6318 282.9678 240.6318 283.6904 C
240.6318 283.6904 L
f
0 g
235.8135 264.5493 m
240.0498 264.5493 L
240.0498 260.2837 L
235.8135 260.2837 L
235.8135 264.5493 L
235.8135 264.5493 L
f
0 g
235.8135 269.3472 m
236.5166 269.3472 237.2188 269.3472 237.9316 269.3472 c
238.6338 269.3472 239.3369 269.3472 240.0498 269.3472 C
240.0498 268.6143 240.0498 267.9019 240.0498 267.1992 c
240.0498 266.4868 240.0498 265.7842 240.0498 265.0815 C
239.3369 265.0815 238.6338 265.0815 237.9316 265.0815 c
237.2188 265.0815 236.5166 265.0815 235.8135 265.0815 C
235.8135 265.7842 235.8135 266.4868 235.8135 267.1992 c
235.8135 267.9019 235.8135 268.6143 235.8135 269.3472 C
235.8135 269.3472 L
f
235.8135 274.105 m
236.5166 274.105 237.2188 274.105 237.9316 274.105 c
238.6338 274.105 239.3369 274.105 240.0498 274.105 C
240.0498 273.4023 240.0498 272.6895 240.0498 271.9873 c
240.0498 271.2842 240.0498 270.5815 240.0498 269.8691 C
239.3369 269.8691 238.6338 269.8691 237.9316 269.8691 c
237.2188 269.8691 236.5166 269.8691 235.8135 269.8691 C
235.8135 270.5815 235.8135 271.2842 235.8135 271.9873 c
235.8135 272.6895 235.8135 273.4023 235.8135 274.105 C
Bb
1 (Unnamed gradient) 247.5918 286.5513 -90 29.8115 1 0 0 1 0 0 Bg
-0.000001 -29.8115 -27.5576 0.000001 261.3711 286.5513 Xm
-0.00036 -8227.2305 -27.5576 0.000001 261.3711 8513.7813 Bc
-0.000001 -29.8115 -27.5576 0.000001 261.3711 286.5513 Bm
-0.00036 -8227.2305 -27.5576 0.000001 261.3711 256.7397 Bc
f
0 BB
*U
*u
0 g
264.4492 283.6299 m
265.1523 283.6299 265.8652 283.6299 266.5771 283.6299 c
267.2998 283.6299 268.0029 283.6299 268.7148 283.6299 C
268.7148 282.9272 268.7148 282.2246 268.7148 281.5122 c
268.7148 280.8096 268.7148 280.1069 268.7148 279.3945 C
268.0029 279.3945 267.2998 279.3945 266.5771 279.3945 c
265.8652 279.3945 265.1523 279.3945 264.4492 279.3945 C
264.4492 280.1069 264.4492 280.8096 264.4492 281.5122 c
264.4492 282.2246 264.4492 282.9272 264.4492 283.6299 C
264.4492 283.6299 L
f
0 g
283.7715 264.5195 m
284.4736 264.5195 285.1855 264.5195 285.8984 264.5195 c
286.6113 264.5195 287.3242 264.5195 288.0361 264.5195 C
288.0361 263.8169 288.0361 263.104 288.0361 262.3916 c
288.0361 261.6689 288.0361 260.9663 288.0361 260.2534 C
287.3242 260.2534 286.6113 260.2534 285.8984 260.2534 c
285.1855 260.2534 284.4736 260.2534 283.7715 260.2534 C
283.7715 260.9663 283.7715 261.6689 283.7715 262.3916 c
283.7715 263.104 283.7715 263.8169 283.7715 264.5195 C
283.7715 264.5195 L
f
0 g
283.7715 269.2871 m
284.4736 269.2871 285.1855 269.2871 285.8984 269.2871 c
286.6113 269.2871 287.3242 269.2871 288.0361 269.2871 C
288.0361 268.5747 288.0361 267.8716 288.0361 267.1694 c
288.0361 266.4565 288.0361 265.7539 288.0361 265.0513 C
287.3242 265.0513 286.6113 265.0513 285.8984 265.0513 c
285.1855 265.0513 284.4736 265.0513 283.7715 265.0513 C
283.7715 265.7539 283.7715 266.4565 283.7715 267.1694 c
283.7715 267.8716 283.7715 268.5747 283.7715 269.2871 C
283.7715 269.2871 L
f
0 g
283.7715 274.0747 m
284.4736 274.0747 285.1855 274.0747 285.8984 274.0747 c
286.6113 274.0747 287.3242 274.0747 288.0361 274.0747 C
288.0361 273.3721 288.0361 272.6694 288.0361 271.957 c
288.0361 271.2544 288.0361 270.5518 288.0361 269.8389 C
287.3242 269.8389 286.6113 269.8389 285.8984 269.8389 c
285.1855 269.8389 284.4736 269.8389 283.7715 269.8389 C
283.7715 270.5518 283.7715 271.2544 283.7715 271.957 c
283.7715 272.6694 283.7715 273.3721 283.7715 274.0747 C
283.7715 274.0747 L
f
0 g
283.7715 278.8726 m
284.4736 278.8726 285.1855 278.8726 285.8984 278.8726 c
286.6113 278.8726 287.3242 278.8726 288.0361 278.8726 C
288.0361 278.1396 288.0361 277.4272 288.0361 276.7241 c
288.0361 276.022 288.0361 275.3091 288.0361 274.6064 C
287.3242 274.6064 286.6113 274.6064 285.8984 274.6064 c
285.1855 274.6064 284.4736 274.6064 283.7715 274.6064 C
283.7715 275.3091 283.7715 276.022 283.7715 276.7241 c
283.7715 277.4272 283.7715 278.1396 283.7715 278.8726 C
283.7715 278.8726 L
f
0 g
283.7715 283.6299 m
284.4736 283.6299 285.1855 283.6299 285.8984 283.6299 c
286.6113 283.6299 287.3242 283.6299 288.0361 283.6299 C
288.0361 282.9272 288.0361 282.2246 288.0361 281.5122 c
288.0361 280.8096 288.0361 280.1069 288.0361 279.3945 C
287.3242 279.3945 286.6113 279.3945 285.8984 279.3945 c
285.1855 279.3945 284.4736 279.3945 283.7715 279.3945 C
283.7715 280.1069 283.7715 280.8096 283.7715 281.5122 c
283.7715 282.2246 283.7715 282.9272 283.7715 283.6299 C
283.7715 283.6299 L
f
0 g
278.9434 278.8726 m
279.6553 278.8726 280.3584 278.8726 281.0605 278.8726 c
281.7734 278.8726 282.4766 278.8726 283.1787 278.8726 C
283.1787 278.1396 283.1787 277.4272 283.1787 276.7241 c
283.1787 276.022 283.1787 275.3091 283.1787 274.6064 C
282.4766 274.6064 281.7734 274.6064 281.0605 274.6064 c
280.3584 274.6064 279.6553 274.6064 278.9434 274.6064 C
278.9434 275.3091 278.9434 276.022 278.9434 276.7241 c
278.9434 277.4272 278.9434 278.1396 278.9434 278.8726 C
278.9434 278.8726 L
f
0 g
274.125 274.0747 m
274.8281 274.0747 275.5303 274.0747 276.2432 274.0747 c
276.9453 274.0747 277.6484 274.0747 278.3604 274.0747 C
278.3604 273.3721 278.3604 272.6694 278.3604 271.957 c
278.3604 271.2544 278.3604 270.5518 278.3604 269.8389 C
277.6484 269.8389 276.9453 269.8389 276.2432 269.8389 c
275.5303 269.8389 274.8281 269.8389 274.125 269.8389 C
274.125 270.5518 274.125 271.2544 274.125 271.957 c
274.125 272.6694 274.125 273.3721 274.125 274.0747 C
274.125 274.0747 L
f
0 g
269.2979 278.8726 m
270.0098 278.8726 270.7129 278.8726 271.415 278.8726 c
272.1279 278.8726 272.8301 278.8726 273.5332 278.8726 C
273.5332 278.1396 273.5332 277.4272 273.5332 276.7241 c
273.5332 276.022 273.5332 275.3091 273.5332 274.6064 C
272.8301 274.6064 272.1279 274.6064 271.415 274.6064 c
270.7129 274.6064 270.0098 274.6064 269.2979 274.6064 C
269.2979 275.3091 269.2979 276.022 269.2979 276.7241 c
269.2979 277.4272 269.2979 278.1396 269.2979 278.8726 C
269.2979 278.8726 L
f
0 g
264.4492 264.5195 m
265.1523 264.5195 265.8652 264.5195 266.5771 264.5195 c
267.2998 264.5195 268.0029 264.5195 268.7148 264.5195 C
268.7148 263.8169 268.7148 263.104 268.7148 262.3916 c
268.7148 261.6689 268.7148 260.9663 268.7148 260.2534 C
268.0029 260.2534 267.2998 260.2534 266.5771 260.2534 c
265.8652 260.2534 265.1523 260.2534 264.4492 260.2534 C
264.4492 260.9663 264.4492 261.6689 264.4492 262.3916 c
264.4492 263.104 264.4492 263.8169 264.4492 264.5195 C
264.4492 264.5195 L
f
0 g
264.4492 269.2871 m
265.1523 269.2871 265.8652 269.2871 266.5771 269.2871 c
267.2998 269.2871 268.0029 269.2871 268.7148 269.2871 C
268.7148 268.5747 268.7148 267.8716 268.7148 267.1694 c
268.7148 266.4565 268.7148 265.7539 268.7148 265.0513 C
268.0029 265.0513 267.2998 265.0513 266.5771 265.0513 c
265.8652 265.0513 265.1523 265.0513 264.4492 265.0513 C
264.4492 265.7539 264.4492 266.4565 264.4492 267.1694 c
264.4492 267.8716 264.4492 268.5747 264.4492 269.2871 C
264.4492 269.2871 L
f
0 g
264.4492 274.0747 m
265.1523 274.0747 265.8652 274.0747 266.5771 274.0747 c
267.2998 274.0747 268.0029 274.0747 268.7148 274.0747 C
268.7148 273.3721 268.7148 272.6694 268.7148 271.957 c
268.7148 271.2544 268.7148 270.5518 268.7148 269.8389 C
268.0029 269.8389 267.2998 269.8389 266.5771 269.8389 c
265.8652 269.8389 265.1523 269.8389 264.4492 269.8389 C
264.4492 270.5518 264.4492 271.2544 264.4492 271.957 c
264.4492 272.6694 264.4492 273.3721 264.4492 274.0747 C
264.4492 274.0747 L
f
264.4492 278.8726 m
265.1523 278.8726 265.8652 278.8726 266.5771 278.8726 c
267.2998 278.8726 268.0029 278.8726 268.7148 278.8726 C
268.7148 278.1396 268.7148 277.4272 268.7148 276.7241 c
268.7148 276.022 268.7148 275.3091 268.7148 274.6064 C
268.0029 274.6064 267.2998 274.6064 266.5771 274.6064 c
265.8652 274.6064 265.1523 274.6064 264.4492 274.6064 C
264.4492 275.3091 264.4492 276.022 264.4492 276.7241 c
264.4492 277.4272 264.4492 278.1396 264.4492 278.8726 C
Bb
1 (Unnamed gradient) 276.2422 286.5513 -90 29.8115 1 0 0 1 0 0 Bg
-0.000001 -29.8115 -27.5869 0.000001 290.0361 286.5513 Xm
-0.000361 -8255.8203 -27.5869 0.000001 290.0361 8542.3711 Bc
-0.000001 -29.8115 -27.5869 0.000001 290.0361 286.5513 Bm
-0.000361 -8255.8203 -27.5869 0.000001 290.0361 256.7397 Bc
f
0 BB
*U
*u
0 g
293.2363 278.9023 m
293.9189 278.9023 294.6211 278.9023 295.3438 278.9023 c
296.0566 278.9023 296.7686 278.9023 297.4717 278.9023 C
297.4717 278.1699 297.4717 277.457 297.4717 276.7549 c
297.4717 276.042 297.4717 275.3394 297.4717 274.6367 C
296.7686 274.6367 296.0566 274.6367 295.3438 274.6367 c
294.6211 274.6367 293.9189 274.6367 293.2363 274.6367 C
293.2363 275.3394 293.2363 276.042 293.2363 276.7549 c
293.2363 277.457 293.2363 278.1699 293.2363 278.9023 C
293.2363 278.9023 L
f
0 g
312.5273 264.5195 m
313.2295 264.5195 313.9424 264.5195 314.6553 264.5195 c
315.3779 264.5195 316.0801 264.5195 316.793 264.5195 C
316.793 263.8169 316.793 263.104 316.793 262.4014 c
316.793 261.6992 316.793 260.9863 316.793 260.2837 C
316.0801 260.2837 315.3779 260.2837 314.6553 260.2837 c
313.9424 260.2837 313.2295 260.2837 312.5273 260.2837 C
312.5273 260.9863 312.5273 261.6992 312.5273 262.4014 c
312.5273 263.104 312.5273 263.8169 312.5273 264.5195 C
312.5273 264.5195 L
f
0 g
312.5273 283.6602 m
313.2295 283.6602 313.9424 283.6602 314.6553 283.6602 c
315.3779 283.6602 316.0801 283.6602 316.793 283.6602 C
316.793 282.9575 316.793 282.2549 316.793 281.5425 c
316.793 280.8398 316.793 280.1372 316.793 279.4243 C
316.0801 279.4243 315.3779 279.4243 314.6553 279.4243 c
313.9424 279.4243 313.2295 279.4243 312.5273 279.4243 C
312.5273 280.1372 312.5273 280.8398 312.5273 281.5425 c
312.5273 282.2549 312.5273 282.9575 312.5273 283.6602 C
312.5273 283.6602 L
f
0 g
307.6992 264.5195 m
308.4121 264.5195 309.1143 264.5195 309.8174 264.5195 c
310.5293 264.5195 311.2324 264.5195 311.9346 264.5195 C
311.9346 263.8169 311.9346 263.104 311.9346 262.4014 c
311.9346 261.6992 311.9346 260.9863 311.9346 260.2837 C
311.2324 260.2837 310.5293 260.2837 309.8174 260.2837 c
309.1143 260.2837 308.4121 260.2837 307.6992 260.2837 C
307.6992 260.9863 307.6992 261.6992 307.6992 262.4014 c
307.6992 263.104 307.6992 263.8169 307.6992 264.5195 C
307.6992 264.5195 L
f
0 g
307.6992 283.6602 m
308.4121 283.6602 309.1143 283.6602 309.8174 283.6602 c
310.5293 283.6602 311.2324 283.6602 311.9346 283.6602 C
311.9346 282.9575 311.9346 282.2549 311.9346 281.5425 c
311.9346 280.8398 311.9346 280.1372 311.9346 279.4243 C
311.2324 279.4243 310.5293 279.4243 309.8174 279.4243 c
309.1143 279.4243 308.4121 279.4243 307.6992 279.4243 C
307.6992 280.1372 307.6992 280.8398 307.6992 281.5425 c
307.6992 282.2549 307.6992 282.9575 307.6992 283.6602 C
307.6992 283.6602 L
f
0 g
302.8809 264.5195 m
303.584 264.5195 304.2969 264.5195 304.999 264.5195 c
305.7021 264.5195 306.4141 264.5195 307.1172 264.5195 C
307.1172 263.8169 307.1172 263.104 307.1172 262.4014 c
307.1172 261.6992 307.1172 260.9863 307.1172 260.2837 C
306.4141 260.2837 305.7021 260.2837 304.999 260.2837 c
304.2969 260.2837 303.584 260.2837 302.8809 260.2837 C
302.8809 260.9863 302.8809 261.6992 302.8809 262.4014 c
302.8809 263.104 302.8809 263.8169 302.8809 264.5195 C
302.8809 264.5195 L
f
0 g
302.8809 274.105 m
303.584 274.105 304.2969 274.105 304.999 274.105 c
305.7021 274.105 306.4141 274.105 307.1172 274.105 C
307.1172 273.4023 307.1172 272.6895 307.1172 271.9873 c
307.1172 271.2842 307.1172 270.5815 307.1172 269.8691 C
306.4141 269.8691 305.7021 269.8691 304.999 269.8691 c
304.2969 269.8691 303.584 269.8691 302.8809 269.8691 C
302.8809 270.5815 302.8809 271.2842 302.8809 271.9873 c
302.8809 272.6895 302.8809 273.4023 302.8809 274.105 C
302.8809 274.105 L
f
0 g
302.8809 283.6602 m
303.584 283.6602 304.2969 283.6602 304.999 283.6602 c
305.7021 283.6602 306.4141 283.6602 307.1172 283.6602 C
307.1172 282.9575 307.1172 282.2549 307.1172 281.5425 c
307.1172 280.8398 307.1172 280.1372 307.1172 279.4243 C
306.4141 279.4243 305.7021 279.4243 304.999 279.4243 c
304.2969 279.4243 303.584 279.4243 302.8809 279.4243 C
302.8809 280.1372 302.8809 280.8398 302.8809 281.5425 c
302.8809 282.2549 302.8809 282.9575 302.8809 283.6602 C
302.8809 283.6602 L
f
0 g
298.0635 264.5195 m
298.7666 264.5195 299.4688 264.5195 300.1719 264.5195 c
300.8838 264.5195 301.5869 264.5195 302.2891 264.5195 C
302.2891 263.8169 302.2891 263.104 302.2891 262.4014 c
302.2891 261.6992 302.2891 260.9863 302.2891 260.2837 C
301.5869 260.2837 300.8838 260.2837 300.1719 260.2837 c
299.4688 260.2837 298.7666 260.2837 298.0635 260.2837 C
298.0635 260.9863 298.0635 261.6992 298.0635 262.4014 c
298.0635 263.104 298.0635 263.8169 298.0635 264.5195 C
298.0635 264.5195 L
f
0 g
298.0635 274.105 m
298.7666 274.105 299.4688 274.105 300.1719 274.105 c
300.8838 274.105 301.5869 274.105 302.2891 274.105 C
302.2891 273.4023 302.2891 272.6895 302.2891 271.9873 c
302.2891 271.2842 302.2891 270.5815 302.2891 269.8691 C
301.5869 269.8691 300.8838 269.8691 300.1719 269.8691 c
299.4688 269.8691 298.7666 269.8691 298.0635 269.8691 C
298.0635 270.5815 298.0635 271.2842 298.0635 271.9873 c
298.0635 272.6895 298.0635 273.4023 298.0635 274.105 C
298.0635 274.105 L
f
0 g
298.0635 283.6602 m
298.7666 283.6602 299.4688 283.6602 300.1719 283.6602 c
300.8838 283.6602 301.5869 283.6602 302.2891 283.6602 C
302.2891 282.9575 302.2891 282.2549 302.2891 281.5425 c
302.2891 280.8398 302.2891 280.1372 302.2891 279.4243 C
301.5869 279.4243 300.8838 279.4243 300.1719 279.4243 c
299.4688 279.4243 298.7666 279.4243 298.0635 279.4243 C
298.0635 280.1372 298.0635 280.8398 298.0635 281.5425 c
298.0635 282.2549 298.0635 282.9575 298.0635 283.6602 C
298.0635 283.6602 L
f
0 g
293.2363 269.3169 m
293.9189 269.3169 294.6211 269.3169 295.3438 269.3169 c
296.0566 269.3169 296.7686 269.3169 297.4717 269.3169 C
297.4717 268.6045 297.4717 267.9019 297.4717 267.1992 c
297.4717 266.4868 297.4717 265.7842 297.4717 265.0815 C
296.7686 265.0815 296.0566 265.0815 295.3438 265.0815 c
294.6211 265.0815 293.9189 265.0815 293.2363 265.0815 C
293.2363 265.7842 293.2363 266.4868 293.2363 267.1992 c
293.2363 267.9019 293.2363 268.6045 293.2363 269.3169 C
293.2363 269.3169 L
f
293.2363 274.105 m
293.9189 274.105 294.6211 274.105 295.3438 274.105 c
296.0566 274.105 296.7686 274.105 297.4717 274.105 C
297.4717 273.4023 297.4717 272.6895 297.4717 271.9873 c
297.4717 271.2842 297.4717 270.5815 297.4717 269.8691 C
296.7686 269.8691 296.0566 269.8691 295.3438 269.8691 c
294.6211 269.8691 293.9189 269.8691 293.2363 269.8691 C
293.2363 270.5815 293.2363 271.2842 293.2363 271.9873 c
293.2363 272.6895 293.2363 273.4023 293.2363 274.105 C
Bb
1 (Unnamed gradient) 305.0146 286.5513 -90 29.8115 1 0 0 1 0 0 Bg
-0.000001 -29.8115 -27.5566 0.000001 318.793 286.5513 Xm
-0.000362 -8284.623 -27.5566 0.000001 318.793 8571.1738 Bc
-0.000001 -29.8115 -27.5566 0.000001 318.793 286.5513 Bm
-0.000362 -8284.623 -27.5566 0.000001 318.793 256.7397 Bc
f
0 BB
*U
u
*u
0 g
162.4434 160.4463 m
163.126 160.4463 163.8281 160.4463 164.5513 160.4463 c
165.2637 160.4463 165.9766 160.4463 166.6787 160.4463 C
166.6787 159.7139 166.6787 159.001 166.6787 158.2988 c
166.6787 157.5859 166.6787 156.8838 166.6787 156.1807 C
165.9766 156.1807 165.2637 156.1807 164.5513 156.1807 c
163.8281 156.1807 163.126 156.1807 162.4434 156.1807 C
162.4434 156.8838 162.4434 157.5859 162.4434 158.2988 c
162.4434 159.001 162.4434 159.7139 162.4434 160.4463 C
162.4434 160.4463 L
f
0 g
181.7344 146.0635 m
182.437 146.0635 183.1499 146.0635 183.8623 146.0635 c
184.585 146.0635 185.2876 146.0635 186.0005 146.0635 C
186.0005 145.3613 186.0005 144.6484 186.0005 143.9453 c
186.0005 143.2432 186.0005 142.5303 186.0005 141.8281 C
185.2876 141.8281 184.585 141.8281 183.8623 141.8281 c
183.1499 141.8281 182.437 141.8281 181.7344 141.8281 C
181.7344 142.5303 181.7344 143.2432 181.7344 143.9453 c
181.7344 144.6484 181.7344 145.3613 181.7344 146.0635 C
181.7344 146.0635 L
f
0 g
181.7344 165.2041 m
182.437 165.2041 183.1499 165.2041 183.8623 165.2041 c
184.585 165.2041 185.2876 165.2041 186.0005 165.2041 C
186.0005 164.502 186.0005 163.7988 186.0005 163.0869 c
186.0005 162.3838 186.0005 161.6807 186.0005 160.9688 C
185.2876 160.9688 184.585 160.9688 183.8623 160.9688 c
183.1499 160.9688 182.437 160.9688 181.7344 160.9688 C
181.7344 161.6807 181.7344 162.3838 181.7344 163.0869 c
181.7344 163.7988 181.7344 164.502 181.7344 165.2041 C
181.7344 165.2041 L
f
0 g
176.9067 146.0635 m
177.6191 146.0635 178.3218 146.0635 179.0244 146.0635 c
179.7373 146.0635 180.4395 146.0635 181.1426 146.0635 C
181.1426 145.3613 181.1426 144.6484 181.1426 143.9453 c
181.1426 143.2432 181.1426 142.5303 181.1426 141.8281 C
180.4395 141.8281 179.7373 141.8281 179.0244 141.8281 c
178.3218 141.8281 177.6191 141.8281 176.9067 141.8281 C
176.9067 142.5303 176.9067 143.2432 176.9067 143.9453 c
176.9067 144.6484 176.9067 145.3613 176.9067 146.0635 C
176.9067 146.0635 L
f
0 g
176.9067 165.2041 m
177.6191 165.2041 178.3218 165.2041 179.0244 165.2041 c
179.7373 165.2041 180.4395 165.2041 181.1426 165.2041 C
181.1426 164.502 181.1426 163.7988 181.1426 163.0869 c
181.1426 162.3838 181.1426 161.6807 181.1426 160.9688 C
180.4395 160.9688 179.7373 160.9688 179.0244 160.9688 c
178.3218 160.9688 177.6191 160.9688 176.9067 160.9688 C
176.9067 161.6807 176.9067 162.3838 176.9067 163.0869 c
176.9067 163.7988 176.9067 164.502 176.9067 165.2041 C
176.9067 165.2041 L
f
0 g
172.0889 146.0635 m
172.7915 146.0635 173.5039 146.0635 174.207 146.0635 c
174.9092 146.0635 175.6221 146.0635 176.3247 146.0635 C
176.3247 145.3613 176.3247 144.6484 176.3247 143.9453 c
176.3247 143.2432 176.3247 142.5303 176.3247 141.8281 C
175.6221 141.8281 174.9092 141.8281 174.207 141.8281 c
173.5039 141.8281 172.7915 141.8281 172.0889 141.8281 C
172.0889 142.5303 172.0889 143.2432 172.0889 143.9453 c
172.0889 144.6484 172.0889 145.3613 172.0889 146.0635 C
172.0889 146.0635 L
f
0 g
172.0889 155.6494 m
172.7915 155.6494 173.5039 155.6494 174.207 155.6494 c
174.9092 155.6494 175.6221 155.6494 176.3247 155.6494 C
176.3247 154.9463 176.3247 154.2334 176.3247 153.5313 c
176.3247 152.8281 176.3247 152.126 176.3247 151.4131 C
175.6221 151.4131 174.9092 151.4131 174.207 151.4131 c
173.5039 151.4131 172.7915 151.4131 172.0889 151.4131 C
172.0889 152.126 172.0889 152.8281 172.0889 153.5313 c
172.0889 154.2334 172.0889 154.9463 172.0889 155.6494 C
172.0889 155.6494 L
f
0 g
172.0889 165.2041 m
172.7915 165.2041 173.5039 165.2041 174.207 165.2041 c
174.9092 165.2041 175.6221 165.2041 176.3247 165.2041 C
176.3247 164.502 176.3247 163.7988 176.3247 163.0869 c
176.3247 162.3838 176.3247 161.6807 176.3247 160.9688 C
175.6221 160.9688 174.9092 160.9688 174.207 160.9688 c
173.5039 160.9688 172.7915 160.9688 172.0889 160.9688 C
172.0889 161.6807 172.0889 162.3838 172.0889 163.0869 c
172.0889 163.7988 172.0889 164.502 172.0889 165.2041 C
172.0889 165.2041 L
f
0 g
167.271 146.0635 m
167.9736 146.0635 168.6763 146.0635 169.3789 146.0635 c
170.0913 146.0635 170.7939 146.0635 171.4966 146.0635 C
171.4966 145.3613 171.4966 144.6484 171.4966 143.9453 c
171.4966 143.2432 171.4966 142.5303 171.4966 141.8281 C
170.7939 141.8281 170.0913 141.8281 169.3789 141.8281 c
168.6763 141.8281 167.9736 141.8281 167.271 141.8281 C
167.271 142.5303 167.271 143.2432 167.271 143.9453 c
167.271 144.6484 167.271 145.3613 167.271 146.0635 C
167.271 146.0635 L
f
0 g
167.271 155.6494 m
167.9736 155.6494 168.6763 155.6494 169.3789 155.6494 c
170.0913 155.6494 170.7939 155.6494 171.4966 155.6494 C
171.4966 154.9463 171.4966 154.2334 171.4966 153.5313 c
171.4966 152.8281 171.4966 152.126 171.4966 151.4131 C
170.7939 151.4131 170.0913 151.4131 169.3789 151.4131 c
168.6763 151.4131 167.9736 151.4131 167.271 151.4131 C
167.271 152.126 167.271 152.8281 167.271 153.5313 c
167.271 154.2334 167.271 154.9463 167.271 155.6494 C
167.271 155.6494 L
f
0 g
167.271 165.2041 m
167.9736 165.2041 168.6763 165.2041 169.3789 165.2041 c
170.0913 165.2041 170.7939 165.2041 171.4966 165.2041 C
171.4966 164.502 171.4966 163.7988 171.4966 163.0869 c
171.4966 162.3838 171.4966 161.6807 171.4966 160.9688 C
170.7939 160.9688 170.0913 160.9688 169.3789 160.9688 c
168.6763 160.9688 167.9736 160.9688 167.271 160.9688 C
167.271 161.6807 167.271 162.3838 167.271 163.0869 c
167.271 163.7988 167.271 164.502 167.271 165.2041 C
167.271 165.2041 L
f
0 g
162.4434 150.8613 m
163.126 150.8613 163.8281 150.8613 164.5513 150.8613 c
165.2637 150.8613 165.9766 150.8613 166.6787 150.8613 C
166.6787 150.1484 166.6787 149.4463 166.6787 148.7432 c
166.6787 148.0313 166.6787 147.3281 166.6787 146.626 C
165.9766 146.626 165.2637 146.626 164.5513 146.626 c
163.8281 146.626 163.126 146.626 162.4434 146.626 C
162.4434 147.3281 162.4434 148.0313 162.4434 148.7432 c
162.4434 149.4463 162.4434 150.1484 162.4434 150.8613 C
162.4434 150.8613 L
f
162.4434 155.6494 m
163.126 155.6494 163.8281 155.6494 164.5513 155.6494 c
165.2637 155.6494 165.9766 155.6494 166.6787 155.6494 C
166.6787 154.9463 166.6787 154.2334 166.6787 153.5313 c
166.6787 152.8281 166.6787 152.126 166.6787 151.4131 C
165.9766 151.4131 165.2637 151.4131 164.5513 151.4131 c
163.8281 151.4131 163.126 151.4131 162.4434 151.4131 C
162.4434 152.126 162.4434 152.8281 162.4434 153.5313 c
162.4434 154.2334 162.4434 154.9463 162.4434 155.6494 C
Bb
1 (Unnamed gradient) 174.2222 166.877 -90 28.2443 1 0 0 1 0 0 Bg
-0.000001 -28.2443 -27.5571 0.000001 188.0005 166.877 Xm
-0.000356 -8155.0498 -27.5571 0.000001 188.001 8321.9268 Bc
-0.000001 -28.2443 -27.5571 0.000001 188.0005 166.877 Bm
-0.000356 -8155.0498 -27.5571 0.000001 188.0005 138.6328 Bc
f
0 BB
*U
*u
0 g
191.3198 165.2646 m
192.0225 165.2646 192.7354 165.2646 193.4375 165.2646 c
194.1401 165.2646 194.853 165.2646 195.5552 165.2646 C
195.5552 164.5615 195.5552 163.8496 195.5552 163.1367 c
195.5552 162.4141 195.5552 161.7109 195.5552 160.999 C
194.853 160.999 194.1401 160.999 193.4375 160.999 c
192.7354 160.999 192.0225 160.999 191.3198 160.999 C
191.3198 161.7109 191.3198 162.4141 191.3198 163.1367 c
191.3198 163.8496 191.3198 164.5615 191.3198 165.2646 C
191.3198 165.2646 L
f
0 g
210.6411 146.124 m
211.3438 146.124 212.0464 146.124 212.7588 146.124 c
213.4619 146.124 214.1641 146.124 214.877 146.124 C
214.877 145.4209 214.877 144.709 214.877 144.0059 c
214.877 143.3027 214.877 142.5908 214.877 141.8887 C
214.1641 141.8887 213.4619 141.8887 212.7588 141.8887 c
212.0464 141.8887 211.3438 141.8887 210.6411 141.8887 C
210.6411 142.5908 210.6411 143.3027 210.6411 144.0059 c
210.6411 144.709 210.6411 145.4209 210.6411 146.124 C
210.6411 146.124 L
f
0 g
210.6411 165.2646 m
211.3438 165.2646 212.0464 165.2646 212.7588 165.2646 c
213.4619 165.2646 214.1641 165.2646 214.877 165.2646 C
214.877 164.5615 214.877 163.8496 214.877 163.1367 c
214.877 162.4141 214.877 161.7109 214.877 160.999 C
214.1641 160.999 213.4619 160.999 212.7588 160.999 c
212.0464 160.999 211.3438 160.999 210.6411 160.999 C
210.6411 161.7109 210.6411 162.4141 210.6411 163.1367 c
210.6411 163.8496 210.6411 164.5615 210.6411 165.2646 C
210.6411 165.2646 L
f
0 g
205.8135 150.9111 m
206.5259 150.9111 207.2285 150.9111 207.9312 150.9111 c
208.6436 150.9111 209.3467 150.9111 210.0488 150.9111 C
210.0488 150.209 210.0488 149.4961 210.0488 148.7832 c
210.0488 148.0703 210.0488 147.3584 210.0488 146.6563 C
209.3467 146.6563 208.6436 146.6563 207.9312 146.6563 c
207.2285 146.6563 206.5259 146.6563 205.8135 146.6563 C
205.8135 147.3584 205.8135 148.0703 205.8135 148.7832 c
205.8135 149.4961 205.8135 150.209 205.8135 150.9111 C
205.8135 150.9111 L
f
0 g
205.8135 160.4766 m
206.5259 160.4766 207.2285 160.4766 207.9312 160.4766 c
208.6436 160.4766 209.3467 160.4766 210.0488 160.4766 C
210.0488 159.7637 210.0488 159.0615 210.0488 158.3594 c
210.0488 157.6465 210.0488 156.9434 210.0488 156.2412 C
209.3467 156.2412 208.6436 156.2412 207.9312 156.2412 c
207.2285 156.2412 206.5259 156.2412 205.8135 156.2412 C
205.8135 156.9434 205.8135 157.6465 205.8135 158.3594 c
205.8135 159.0615 205.8135 159.7637 205.8135 160.4766 C
205.8135 160.4766 L
f
0 g
200.9658 155.6787 m
201.668 155.6787 202.3809 155.6787 203.0933 155.6787 c
203.8159 155.6787 204.5186 155.6787 205.2314 155.6787 C
205.2314 154.9766 205.2314 154.2637 205.2314 153.5615 c
205.2314 152.8584 205.2314 152.1455 205.2314 151.4434 C
204.5186 151.4434 203.8159 151.4434 203.0933 151.4434 c
202.3809 151.4434 201.668 151.4434 200.9658 151.4434 C
200.9658 152.1455 200.9658 152.8584 200.9658 153.5615 c
200.9658 154.2637 200.9658 154.9766 200.9658 155.6787 C
200.9658 155.6787 L
f
0 g
196.1377 150.9111 m
196.8501 150.9111 197.563 150.9111 198.2754 150.9111 c
198.9883 150.9111 199.7007 150.9111 200.4033 150.9111 C
200.4033 150.209 200.4033 149.4961 200.4033 148.7832 c
200.4033 148.0703 200.4033 147.3584 200.4033 146.6563 C
199.7007 146.6563 198.9883 146.6563 198.2754 146.6563 c
197.563 146.6563 196.8501 146.6563 196.1377 146.6563 C
196.1377 147.3584 196.1377 148.0703 196.1377 148.7832 c
196.1377 149.4961 196.1377 150.209 196.1377 150.9111 C
196.1377 150.9111 L
f
0 g
196.1377 160.4766 m
196.8501 160.4766 197.563 160.4766 198.2754 160.4766 c
198.9883 160.4766 199.7007 160.4766 200.4033 160.4766 C
200.4033 159.7637 200.4033 159.0615 200.4033 158.3594 c
200.4033 157.6465 200.4033 156.9434 200.4033 156.2412 C
199.7007 156.2412 198.9883 156.2412 198.2754 156.2412 c
197.563 156.2412 196.8501 156.2412 196.1377 156.2412 C
196.1377 156.9434 196.1377 157.6465 196.1377 158.3594 c
196.1377 159.0615 196.1377 159.7637 196.1377 160.4766 C
196.1377 160.4766 L
f
191.3198 146.124 m
192.0225 146.124 192.7354 146.124 193.4375 146.124 c
194.1401 146.124 194.853 146.124 195.5552 146.124 C
195.5552 145.4209 195.5552 144.709 195.5552 144.0059 c
195.5552 143.3027 195.5552 142.5908 195.5552 141.8887 C
194.853 141.8887 194.1401 141.8887 193.4375 141.8887 c
192.7354 141.8887 192.0225 141.8887 191.3198 141.8887 C
191.3198 142.5908 191.3198 143.3027 191.3198 144.0059 c
191.3198 144.709 191.3198 145.4209 191.3198 146.124 C
Bb
1 (Unnamed gradient) 203.0981 166.877 -90 28.2443 1 0 0 1 0 0 Bg
-0.000001 -28.2443 -27.5571 0.000001 216.877 166.877 Xm
-0.000358 -8183.9863 -27.5571 0.000001 216.877 8350.8633 Bc
-0.000001 -28.2443 -27.5571 0.000001 216.877 166.877 Bm
-0.000358 -8183.9863 -27.5571 0.000001 216.877 138.6328 Bc
f
0 BB
*U
*u
0 g
220.166 165.2041 m
220.8486 165.2041 221.5518 165.2041 222.2637 165.2041 c
222.9863 165.2041 223.6992 165.2041 224.4023 165.2041 C
224.4023 164.502 224.4023 163.7988 224.4023 163.0869 c
224.4023 162.3838 224.4023 161.6807 224.4023 160.9688 C
223.6992 160.9688 222.9863 160.9688 222.2637 160.9688 c
221.5518 160.9688 220.8486 160.9688 220.166 160.9688 C
220.166 161.6807 220.166 162.3838 220.166 163.0869 c
220.166 163.7988 220.166 164.502 220.166 165.2041 C
220.166 165.2041 L
f
0 g
229.8125 146.0635 m
230.5146 146.0635 231.2275 146.0635 231.9297 146.0635 c
232.6318 146.0635 233.3447 146.0635 234.0479 146.0635 C
234.0479 145.3613 234.0479 144.6484 234.0479 143.9453 c
234.0479 143.2432 234.0479 142.5303 234.0479 141.8281 C
233.3447 141.8281 232.6318 141.8281 231.9297 141.8281 c
231.2275 141.8281 230.5146 141.8281 229.8125 141.8281 C
229.8125 142.5303 229.8125 143.2432 229.8125 143.9453 c
229.8125 144.6484 229.8125 145.3613 229.8125 146.0635 C
229.8125 146.0635 L
f
0 g
229.8125 165.2041 m
230.5146 165.2041 231.2275 165.2041 231.9297 165.2041 c
232.6318 165.2041 233.3447 165.2041 234.0479 165.2041 C
234.0479 164.502 234.0479 163.7988 234.0479 163.0869 c
234.0479 162.3838 234.0479 161.6807 234.0479 160.9688 C
233.3447 160.9688 232.6318 160.9688 231.9297 160.9688 c
231.2275 160.9688 230.5146 160.9688 229.8125 160.9688 C
229.8125 161.6807 229.8125 162.3838 229.8125 163.0869 c
229.8125 163.7988 229.8125 164.502 229.8125 165.2041 C
229.8125 165.2041 L
f
0 g
224.9844 146.0635 m
225.6973 146.0635 226.3994 146.0635 227.1016 146.0635 c
227.8145 146.0635 228.5176 146.0635 229.2197 146.0635 C
229.2197 145.3613 229.2197 144.6484 229.2197 143.9453 c
229.2197 143.2432 229.2197 142.5303 229.2197 141.8281 C
228.5176 141.8281 227.8145 141.8281 227.1016 141.8281 c
226.3994 141.8281 225.6973 141.8281 224.9844 141.8281 C
224.9844 142.5303 224.9844 143.2432 224.9844 143.9453 c
224.9844 144.6484 224.9844 145.3613 224.9844 146.0635 C
224.9844 146.0635 L
f
0 g
224.9844 150.8613 m
225.6973 150.8613 226.3994 150.8613 227.1016 150.8613 c
227.8145 150.8613 228.5176 150.8613 229.2197 150.8613 C
229.2197 150.1484 229.2197 149.4463 229.2197 148.7432 c
229.2197 148.0313 229.2197 147.3281 229.2197 146.626 C
228.5176 146.626 227.8145 146.626 227.1016 146.626 c
226.3994 146.626 225.6973 146.626 224.9844 146.626 C
224.9844 147.3281 224.9844 148.0313 224.9844 148.7432 c
224.9844 149.4463 224.9844 150.1484 224.9844 150.8613 C
224.9844 150.8613 L
f
0 g
224.9844 155.6191 m
225.6973 155.6191 226.3994 155.6191 227.1016 155.6191 c
227.8145 155.6191 228.5176 155.6191 229.2197 155.6191 C
229.2197 154.916 229.2197 154.2139 229.2197 153.501 c
229.2197 152.7988 229.2197 152.0957 229.2197 151.3828 C
228.5176 151.3828 227.8145 151.3828 227.1016 151.3828 c
226.3994 151.3828 225.6973 151.3828 224.9844 151.3828 C
224.9844 152.0957 224.9844 152.7988 224.9844 153.501 c
224.9844 154.2139 224.9844 154.916 224.9844 155.6191 C
224.9844 155.6191 L
f
0 g
224.9844 160.417 m
225.6973 160.417 226.3994 160.417 227.1016 160.417 c
227.8145 160.417 228.5176 160.417 229.2197 160.417 C
229.2197 159.7041 229.2197 159.001 229.2197 158.2988 c
229.2197 157.5859 229.2197 156.8838 229.2197 156.1807 C
228.5176 156.1807 227.8145 156.1807 227.1016 156.1807 c
226.3994 156.1807 225.6973 156.1807 224.9844 156.1807 C
224.9844 156.8838 224.9844 157.5859 224.9844 158.2988 c
224.9844 159.001 224.9844 159.7041 224.9844 160.417 C
224.9844 160.417 L
f
0 g
224.9844 165.2041 m
225.6973 165.2041 226.3994 165.2041 227.1016 165.2041 c
227.8145 165.2041 228.5176 165.2041 229.2197 165.2041 C
229.2197 164.502 229.2197 163.7988 229.2197 163.0869 c
229.2197 162.3838 229.2197 161.6807 229.2197 160.9688 C
228.5176 160.9688 227.8145 160.9688 227.1016 160.9688 c
226.3994 160.9688 225.6973 160.9688 224.9844 160.9688 C
224.9844 161.6807 224.9844 162.3838 224.9844 163.0869 c
224.9844 163.7988 224.9844 164.502 224.9844 165.2041 C
224.9844 165.2041 L
f
220.166 146.0635 m
220.8486 146.0635 221.5518 146.0635 222.2637 146.0635 c
222.9863 146.0635 223.6992 146.0635 224.4023 146.0635 C
224.4023 145.3613 224.4023 144.6484 224.4023 143.9453 c
224.4023 143.2432 224.4023 142.5303 224.4023 141.8281 C
223.6992 141.8281 222.9863 141.8281 222.2637 141.8281 c
221.5518 141.8281 220.8486 141.8281 220.166 141.8281 C
220.166 142.5303 220.166 143.2432 220.166 143.9453 c
220.166 144.6484 220.166 145.3613 220.166 146.0635 C
Bb
1 (Unnamed gradient) 227.1074 166.877 -90 28.2443 1 0 0 1 0 0 Bg
-0.000001 -28.2443 -17.8818 0.000001 236.0479 166.877 Xm
-0.000359 -8207.9346 -17.8818 0.000001 236.0479 8374.8115 Bc
-0.000001 -28.2443 -17.8818 0.000001 236.0479 166.877 Bm
-0.000359 -8207.9346 -17.8818 0.000001 236.0479 138.6328 Bc
f
0 BB
*U
*u
0 g
239.1963 165.2344 m
239.8994 165.2344 240.6113 165.2344 241.3145 165.2344 c
242.0166 165.2344 242.7295 165.2344 243.4326 165.2344 C
243.4326 164.5313 243.4326 163.8291 243.4326 163.1162 c
243.4326 162.4141 243.4326 161.7109 243.4326 160.999 C
242.7295 160.999 242.0166 160.999 241.3145 160.999 c
240.6113 160.999 239.8994 160.999 239.1963 160.999 C
239.1963 161.7109 239.1963 162.4141 239.1963 163.1162 c
239.1963 163.8291 239.1963 164.5313 239.1963 165.2344 C
239.1963 165.2344 L
f
0 g
244.0146 165.2344 m
244.7266 165.2344 245.4297 165.2344 246.1318 165.2344 c
246.8447 165.2344 247.5469 165.2344 248.25 165.2344 C
248.25 164.5313 248.25 163.8291 248.25 163.1162 c
248.25 162.4141 248.25 161.7109 248.25 160.999 C
247.5469 160.999 246.8447 160.999 246.1318 160.999 c
245.4297 160.999 244.7266 160.999 244.0146 160.999 C
244.0146 161.7109 244.0146 162.4141 244.0146 163.1162 c
244.0146 163.8291 244.0146 164.5313 244.0146 165.2344 C
244.0146 165.2344 L
f
0 g
258.4873 165.2344 m
259.1904 165.2344 259.9033 165.2344 260.6152 165.2344 c
261.3281 165.2344 262.041 165.2344 262.7539 165.2344 C
262.7539 164.5313 262.7539 163.8291 262.7539 163.1162 c
262.7539 162.4141 262.7539 161.7109 262.7539 160.999 C
262.041 160.999 261.3281 160.999 260.6152 160.999 c
259.9033 160.999 259.1904 160.999 258.4873 160.999 C
258.4873 161.7109 258.4873 162.4141 258.4873 163.1162 c
258.4873 163.8291 258.4873 164.5313 258.4873 165.2344 C
258.4873 165.2344 L
f
0 g
253.6602 165.2344 m
254.373 165.2344 255.0752 165.2344 255.7773 165.2344 c
256.4902 165.2344 257.2031 165.2344 257.9258 165.2344 C
257.9258 164.5313 257.9258 163.8291 257.9258 163.1162 c
257.9258 162.4141 257.9258 161.7109 257.9258 160.999 C
257.2031 160.999 256.4902 160.999 255.7773 160.999 c
255.0752 160.999 254.373 160.999 253.6602 160.999 C
253.6602 161.7109 253.6602 162.4141 253.6602 163.1162 c
253.6602 163.8291 253.6602 164.5313 253.6602 165.2344 C
253.6602 165.2344 L
f
0 g
248.8418 146.0938 m
249.5449 146.0938 250.2568 146.0938 250.96 146.0938 c
251.6631 146.0938 252.3652 146.0938 253.0781 146.0938 C
253.0781 145.3906 253.0781 144.6787 253.0781 143.9756 c
253.0781 143.2734 253.0781 142.5605 253.0781 141.8584 C
252.3652 141.8584 251.6631 141.8584 250.96 141.8584 c
250.2568 141.8584 249.5449 141.8584 248.8418 141.8584 C
248.8418 142.5605 248.8418 143.2734 248.8418 143.9756 c
248.8418 144.6787 248.8418 145.3906 248.8418 146.0938 C
248.8418 146.0938 L
f
0 g
248.8418 150.8916 m
249.5449 150.8916 250.2568 150.8916 250.96 150.8916 c
251.6631 150.8916 252.3652 150.8916 253.0781 150.8916 C
253.0781 150.1787 253.0781 149.4766 253.0781 148.7734 c
253.0781 148.0605 253.0781 147.3584 253.0781 146.6563 C
252.3652 146.6563 251.6631 146.6563 250.96 146.6563 c
250.2568 146.6563 249.5449 146.6563 248.8418 146.6563 C
248.8418 147.3584 248.8418 148.0605 248.8418 148.7734 c
248.8418 149.4766 248.8418 150.1787 248.8418 150.8916 C
248.8418 150.8916 L
f
0 g
248.8418 155.6787 m
249.5449 155.6787 250.2568 155.6787 250.96 155.6787 c
251.6631 155.6787 252.3652 155.6787 253.0781 155.6787 C
253.0781 154.9766 253.0781 154.2637 253.0781 153.5615 c
253.0781 152.8584 253.0781 152.1455 253.0781 151.4434 C
252.3652 151.4434 251.6631 151.4434 250.96 151.4434 c
250.2568 151.4434 249.5449 151.4434 248.8418 151.4434 C
248.8418 152.1455 248.8418 152.8584 248.8418 153.5615 c
248.8418 154.2637 248.8418 154.9766 248.8418 155.6787 C
248.8418 155.6787 L
f
0 g
248.8418 160.4463 m
249.5449 160.4463 250.2568 160.4463 250.96 160.4463 c
251.6631 160.4463 252.3652 160.4463 253.0781 160.4463 C
253.0781 159.7344 253.0781 159.0313 253.0781 158.3291 c
253.0781 157.6162 253.0781 156.9131 253.0781 156.2109 C
252.3652 156.2109 251.6631 156.2109 250.96 156.2109 c
250.2568 156.2109 249.5449 156.2109 248.8418 156.2109 C
248.8418 156.9131 248.8418 157.6162 248.8418 158.3291 c
248.8418 159.0313 248.8418 159.7344 248.8418 160.4463 C
248.8418 160.4463 L
f
248.8418 165.2344 m
249.5449 165.2344 250.2568 165.2344 250.96 165.2344 c
251.6631 165.2344 252.3652 165.2344 253.0781 165.2344 C
253.0781 164.5313 253.0781 163.8291 253.0781 163.1162 c
253.0781 162.4141 253.0781 161.7109 253.0781 160.999 C
252.3652 160.999 251.6631 160.999 250.96 160.999 c
250.2568 160.999 249.5449 160.999 248.8418 160.999 C
248.8418 161.7109 248.8418 162.4141 248.8418 163.1162 c
248.8418 163.8291 248.8418 164.5313 248.8418 165.2344 C
Bb
1 (Unnamed gradient) 250.9746 166.877 -90 28.2443 1 0 0 1 0 0 Bg
-0.000001 -28.2443 -27.5576 0.000001 264.7539 166.877 Xm
-0.00036 -8231.832 -27.5576 0.000001 264.7539 8398.709 Bc
-0.000001 -28.2443 -27.5576 0.000001 264.7539 166.877 Bm
-0.00036 -8231.832 -27.5576 0.000001 264.7539 138.6328 Bc
f
0 BB
*U
U
1 XR
76.0776 282.8838 m
94.3472 271.8262 L
76.0776 260.769 L
76.0776 282.8838 L
Bb
1 (Unnamed gradient) 85.2124 286.4653 -90 31.8634 1 0 0 1 0 0 Bg
-0.000001 -31.8634 -22.2695 0.000001 96.3472 286.4653 Xm
-0.000352 -8064.1309 -22.2695 0.000001 96.3477 8350.5957 Bc
-0.000001 -31.8634 -22.2695 0.000001 96.3472 286.4653 Bm
-0.000352 -8064.1309 -22.2695 0.000001 96.3472 254.6021 Bc
f
0 BB
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
